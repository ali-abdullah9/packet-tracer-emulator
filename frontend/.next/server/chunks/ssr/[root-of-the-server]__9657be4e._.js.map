{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hanym/Desktop/packet-tracer-emulator/frontend/src/store/networkStore.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { NetworkDevice, NetworkConnection, PacketFlow, SimulationState } from '@/types';\n\ninterface NetworkStore extends SimulationState {\n  // Device actions\n  addDevice: (device: Omit<NetworkDevice, 'id'>) => void;\n  removeDevice: (deviceId: string) => void;\n  updateDevice: (deviceId: string, updates: Partial<NetworkDevice>) => void;\n  \n  // Connection actions\n  addConnection: (connection: Omit<NetworkConnection, 'id'>) => void;\n  removeConnection: (connectionId: string) => void;\n  \n  // Packet actions\n  addPacket: (packet: Omit<PacketFlow, 'id'>) => void;\n  updatePacket: (packetId: string, updates: Partial<PacketFlow>) => void;\n  clearPackets: () => void;\n  \n  // Simulation actions\n  startSimulation: () => void;\n  stopSimulation: () => void;\n  resetSimulation: () => void;\n}\n\nexport const useNetworkStore = create<NetworkStore>((set, get) => ({\n  devices: [],\n  connections: [],\n  packets: [],\n  isRunning: false,\n\n  addDevice: (deviceData) => {\n    const device: NetworkDevice = {\n      ...deviceData,\n      id: `device-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n    };\n    set((state) => ({\n      devices: [...state.devices, device],\n    }));\n  },\n\n  removeDevice: (deviceId) => {\n    set((state) => ({\n      devices: state.devices.filter((d) => d.id !== deviceId),\n      connections: state.connections.filter(\n        (c) => c.source !== deviceId && c.target !== deviceId\n      ),\n    }));\n  },\n\n  updateDevice: (deviceId, updates) => {\n    set((state) => ({\n      devices: state.devices.map((d) =>\n        d.id === deviceId ? { ...d, ...updates } : d\n      ),\n    }));\n  },\n\n  addConnection: (connectionData) => {\n    const connection: NetworkConnection = {\n      ...connectionData,\n      id: `conn-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n    };\n    set((state) => ({\n      connections: [...state.connections, connection],\n    }));\n  },\n\n  removeConnection: (connectionId) => {\n    set((state) => ({\n      connections: state.connections.filter((c) => c.id !== connectionId),\n    }));\n  },\n\n  addPacket: (packetData) => {\n    const packet: PacketFlow = {\n      ...packetData,\n      id: `packet-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n    };\n    set((state) => ({\n      packets: [...state.packets, packet],\n    }));\n  },\n\n  updatePacket: (packetId, updates) => {\n    set((state) => ({\n      packets: state.packets.map((p) =>\n        p.id === packetId ? { ...p, ...updates } : p\n      ),\n    }));\n  },\n\n  clearPackets: () => {\n    set({ packets: [] });\n  },\n\n  startSimulation: () => {\n    set({ isRunning: true });\n  },\n\n  stopSimulation: () => {\n    set({ isRunning: false });\n  },\n\n  resetSimulation: () => {\n    set({\n      packets: [],\n      isRunning: false,\n      devices: get().devices.map((d) => ({ ...d, status: 'offline' })),\n    });\n  },\n}));\n"],"names":[],"mappings":";;;AAAA;;AAwBO,MAAM,kBAAkB,CAAA,GAAA,wIAAA,CAAA,SAAM,AAAD,EAAgB,CAAC,KAAK,MAAQ,CAAC;QACjE,SAAS,EAAE;QACX,aAAa,EAAE;QACf,SAAS,EAAE;QACX,WAAW;QAEX,WAAW,CAAC;YACV,MAAM,SAAwB;gBAC5B,GAAG,UAAU;gBACb,IAAI,CAAC,OAAO,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,GAAG,IAAI;YACvE;YACA,IAAI,CAAC,QAAU,CAAC;oBACd,SAAS;2BAAI,MAAM,OAAO;wBAAE;qBAAO;gBACrC,CAAC;QACH;QAEA,cAAc,CAAC;YACb,IAAI,CAAC,QAAU,CAAC;oBACd,SAAS,MAAM,OAAO,CAAC,MAAM,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;oBAC9C,aAAa,MAAM,WAAW,CAAC,MAAM,CACnC,CAAC,IAAM,EAAE,MAAM,KAAK,YAAY,EAAE,MAAM,KAAK;gBAEjD,CAAC;QACH;QAEA,cAAc,CAAC,UAAU;YACvB,IAAI,CAAC,QAAU,CAAC;oBACd,SAAS,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,IAC1B,EAAE,EAAE,KAAK,WAAW;4BAAE,GAAG,CAAC;4BAAE,GAAG,OAAO;wBAAC,IAAI;gBAE/C,CAAC;QACH;QAEA,eAAe,CAAC;YACd,MAAM,aAAgC;gBACpC,GAAG,cAAc;gBACjB,IAAI,CAAC,KAAK,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,GAAG,IAAI;YACrE;YACA,IAAI,CAAC,QAAU,CAAC;oBACd,aAAa;2BAAI,MAAM,WAAW;wBAAE;qBAAW;gBACjD,CAAC;QACH;QAEA,kBAAkB,CAAC;YACjB,IAAI,CAAC,QAAU,CAAC;oBACd,aAAa,MAAM,WAAW,CAAC,MAAM,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;gBACxD,CAAC;QACH;QAEA,WAAW,CAAC;YACV,MAAM,SAAqB;gBACzB,GAAG,UAAU;gBACb,IAAI,CAAC,OAAO,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,GAAG,IAAI;YACvE;YACA,IAAI,CAAC,QAAU,CAAC;oBACd,SAAS;2BAAI,MAAM,OAAO;wBAAE;qBAAO;gBACrC,CAAC;QACH;QAEA,cAAc,CAAC,UAAU;YACvB,IAAI,CAAC,QAAU,CAAC;oBACd,SAAS,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,IAC1B,EAAE,EAAE,KAAK,WAAW;4BAAE,GAAG,CAAC;4BAAE,GAAG,OAAO;wBAAC,IAAI;gBAE/C,CAAC;QACH;QAEA,cAAc;YACZ,IAAI;gBAAE,SAAS,EAAE;YAAC;QACpB;QAEA,iBAAiB;YACf,IAAI;gBAAE,WAAW;YAAK;QACxB;QAEA,gBAAgB;YACd,IAAI;gBAAE,WAAW;YAAM;QACzB;QAEA,iBAAiB;YACf,IAAI;gBACF,SAAS,EAAE;gBACX,WAAW;gBACX,SAAS,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,IAAM,CAAC;wBAAE,GAAG,CAAC;wBAAE,QAAQ;oBAAU,CAAC;YAChE;QACF;IACF,CAAC","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hanym/Desktop/packet-tracer-emulator/frontend/src/components/network/DeviceNode.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { Handle, Position, NodeProps } from 'reactflow';\nimport { motion } from 'framer-motion';\nimport { \n  FiWifi, \n  FiMonitor, \n  FiServer, \n  FiHardDrive,\n  FiCircle,\n  FiSettings \n} from 'react-icons/fi';\nimport { NetworkDevice } from '@/types';\nimport { useNetworkStore } from '@/store/networkStore';\n\ninterface DeviceNodeData {\n  device: NetworkDevice;\n  isRunning: boolean;\n  isSelected?: boolean;\n  onOpenConfig?: (deviceId: string) => void;\n}\n\nconst deviceIcons = {\n  router: FiWifi,\n  switch: FiHardDrive,\n  pc: FiMonitor,\n  server: FiServer,\n};\n\nconst deviceColors = {\n  router: 'bg-blue-500',\n  switch: 'bg-green-500', \n  pc: 'bg-purple-500',\n  server: 'bg-orange-500',\n};\n\nconst statusColors = {\n  online: 'text-green-500',\n  offline: 'text-gray-400',\n  error: 'text-red-500',\n};\n\nexport const DeviceNode: React.FC<NodeProps<DeviceNodeData>> = ({ \n  id, \n  data, \n  selected \n}) => {\n  const { updateDevice } = useNetworkStore();\n  const { device, isRunning, onOpenConfig } = data;\n  const IconComponent = deviceIcons[device.type];\n\n  const handleDoubleClick = () => {\n    // Toggle device status on double click\n    const newStatus = device.status === 'online' ? 'offline' : 'online';\n    updateDevice(device.id, { status: newStatus });\n  };\n\n  const handleConfigClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    if (onOpenConfig) {\n      onOpenConfig(device.id);\n    }\n  };\n\n  return (\n    <motion.div\n      initial={{ scale: 0, opacity: 0 }}\n      animate={{ scale: 1, opacity: 1 }}\n      whileHover={{ scale: 1.05 }}\n      whileTap={{ scale: 0.95 }}\n      className={`relative p-4 rounded-lg border-2 bg-white shadow-lg min-w-[120px] group ${\n        selected ? 'border-blue-500' : 'border-gray-200'\n      }`}\n      onDoubleClick={handleDoubleClick}\n    >\n      {/* Connection handles */}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        className=\"w-3 h-3 bg-blue-400 border-2 border-white\"\n      />\n      <Handle\n        type=\"target\"\n        position={Position.Left}\n        className=\"w-3 h-3 bg-blue-400 border-2 border-white\"\n      />\n      <Handle\n        type=\"source\"\n        position={Position.Bottom}\n        className=\"w-3 h-3 bg-blue-400 border-2 border-white\"\n      />\n      <Handle\n        type=\"target\"\n        position={Position.Top}\n        className=\"w-3 h-3 bg-blue-400 border-2 border-white\"\n      />\n\n      {/* Device content */}\n      <div className=\"text-center\">\n        {/* Device icon */}\n        <div className={`inline-flex items-center justify-center w-12 h-12 rounded-lg mb-2 ${deviceColors[device.type]}`}>\n          <IconComponent className=\"w-6 h-6 text-white\" />\n        </div>\n\n        {/* Device name */}\n        <div className=\"text-sm font-medium text-gray-900 mb-1\">\n          {device.name}\n        </div>\n\n        {/* Device status */}\n        <div className=\"flex items-center justify-center space-x-1\">\n          <FiCircle className={`w-3 h-3 ${statusColors[device.status]}`} />\n          <span className=\"text-xs text-gray-600 capitalize\">\n            {device.status}\n          </span>\n        </div>\n\n        {/* Interface count */}\n        <div className=\"text-xs text-gray-500 mt-1\">\n          {device.interfaces.length} interfaces\n        </div>\n\n        {/* Configuration info */}\n        {device.config?.hostname && (\n          <div className=\"text-xs text-blue-600 mt-1\">\n            {device.config.hostname}\n          </div>\n        )}\n      </div>\n\n      {/* Running indicator */}\n      {isRunning && device.status === 'online' && (\n        <motion.div\n          className=\"absolute -top-1 -right-1 w-3 h-3 bg-green-400 rounded-full\"\n          animate={{ scale: [1, 1.2, 1] }}\n          transition={{ duration: 2, repeat: Infinity }}\n        />\n      )}\n\n      {/* Settings button */}\n      <button\n        className=\"absolute top-1 right-1 p-1 text-gray-400 hover:text-gray-600 opacity-0 group-hover:opacity-100 transition-opacity bg-white rounded shadow-sm\"\n        onClick={handleConfigClick}\n        title=\"Configure device\"\n      >\n        <FiSettings className=\"w-3 h-3\" />\n      </button>\n\n      {/* Quick status indicators */}\n      <div className=\"absolute bottom-1 left-1 flex space-x-1\">\n        {device.config?.ipAddress && (\n          <div className=\"w-2 h-2 bg-blue-400 rounded-full\" title=\"IP configured\" />\n        )}\n        {device.interfaces.some(i => i.status === 'up') && (\n          <div className=\"w-2 h-2 bg-green-400 rounded-full\" title=\"Interface active\" />\n        )}\n      </div>\n    </motion.div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hanym/Desktop/packet-tracer-emulator/frontend/src/components/network/ConnectionEdge.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { EdgeProps, getBezierPath } from 'reactflow';\nimport { NetworkConnection } from '@/types';\n\ninterface ConnectionEdgeData {\n  connection: NetworkConnection;\n  isRunning: boolean;\n}\n\nexport const ConnectionEdge: React.FC<EdgeProps<ConnectionEdgeData>> = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  data,\n  markerEnd,\n}) => {\n  const { connection, isRunning } = data || {};\n  \n  const [edgePath] = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  });\n\n  const strokeColor = connection?.status === 'connected' ? '#10b981' : '#ef4444';\n  const strokeWidth = isRunning ? 3 : 2;\n\n  return (\n    <>\n      <path\n        id={id}\n        style={{\n          stroke: strokeColor,\n          strokeWidth,\n          fill: 'none',\n        }}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      \n      {/* Connection label */}\n      {connection && (\n        <text\n          x={(sourceX + targetX) / 2}\n          y={(sourceY + targetY) / 2}\n          className=\"text-xs fill-gray-600\"\n          textAnchor=\"middle\"\n          dy={-5}\n        >\n          {connection.sourceInterface} ↔ {connection.targetInterface}\n        </text>\n      )}\n    </>\n  );\n};\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAWO,MAAM,iBAA0D,CAAC,EACtE,EAAE,EACF,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,cAAc,EACd,cAAc,EACd,IAAI,EACJ,SAAS,EACV;IACC,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,QAAQ,CAAC;IAE3C,MAAM,CAAC,SAAS,GAAG,CAAA,GAAA,4JAAA,CAAA,gBAAa,AAAD,EAAE;QAC/B;QACA;QACA;QACA;QACA;QACA;IACF;IAEA,MAAM,cAAc,YAAY,WAAW,cAAc,YAAY;IACrE,MAAM,cAAc,YAAY,IAAI;IAEpC,qBACE;;0BACE,8OAAC;gBACC,IAAI;gBACJ,OAAO;oBACL,QAAQ;oBACR;oBACA,MAAM;gBACR;gBACA,WAAU;gBACV,GAAG;gBACH,WAAW;;;;;;YAIZ,4BACC,8OAAC;gBACC,GAAG,CAAC,UAAU,OAAO,IAAI;gBACzB,GAAG,CAAC,UAAU,OAAO,IAAI;gBACzB,WAAU;gBACV,YAAW;gBACX,IAAI,CAAC;;oBAEJ,WAAW,eAAe;oBAAC;oBAAI,WAAW,eAAe;;;;;;;;;AAKpE","debugId":null}},
    {"offset": {"line": 422, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hanym/Desktop/packet-tracer-emulator/frontend/src/components/network/NetworkTopology.tsx"],"sourcesContent":["'use client';\n\nimport React, { useCallback, useMemo, useRef } from 'react';\nimport ReactFlow, {\n  Background,\n  Controls,\n  MiniMap,\n  Node,\n  Edge,\n  addEdge,\n  Connection,\n  useNodesState,\n  useEdgesState,\n  ConnectionMode,\n  Panel,\n  ReactFlowInstance,\n  OnSelectionChangeParams,\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\n\nimport { useNetworkStore } from '@/store/networkStore';\nimport { DeviceNode } from './DeviceNode';\nimport { ConnectionEdge } from './ConnectionEdge';\n\nconst nodeTypes = {\n  device: DeviceNode,\n};\n\nconst edgeTypes = {\n  connection: ConnectionEdge,\n};\n\ninterface NetworkTopologyProps {\n  onOpenDeviceConfig?: (deviceId: string) => void;\n}\n\nexport const NetworkTopology: React.FC<NetworkTopologyProps> = ({ \n  onOpenDeviceConfig \n}) => {\n  const { \n    devices, \n    connections, \n    addDevice, \n    addConnection, \n    updateDevice,\n    isRunning \n  } = useNetworkStore();\n  \n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [selectedNodes, setSelectedNodes] = React.useState<string[]>([]);\n  const reactFlowWrapper = useRef<HTMLDivElement>(null);\n  const [reactFlowInstance, setReactFlowInstance] = React.useState<ReactFlowInstance | null>(null);\n\n  const flowNodes = useMemo(() => {\n    return devices.map((device) => ({\n      id: device.id,\n      type: 'device',\n      position: device.position,\n      data: {\n        device,\n        isRunning,\n        isSelected: selectedNodes.includes(device.id),\n        onOpenConfig: onOpenDeviceConfig,\n      },\n      draggable: true,\n    }));\n  }, [devices, isRunning, selectedNodes, onOpenDeviceConfig]);\n\n  const flowEdges = useMemo(() => {\n    return connections.map((connection) => ({\n      id: connection.id,\n      type: 'connection',\n      source: connection.source,\n      target: connection.target,\n      data: {\n        connection,\n        isRunning,\n      },\n      animated: isRunning && connection.status === 'connected',\n      style: {\n        stroke: connection.status === 'connected' ? '#10b981' : '#ef4444',\n        strokeWidth: isRunning ? 3 : 2,\n      },\n    }));\n  }, [connections, isRunning]);\n\n  React.useEffect(() => {\n    setNodes(flowNodes);\n  }, [flowNodes, setNodes]);\n\n  React.useEffect(() => {\n    setEdges(flowEdges);\n  }, [flowEdges, setEdges]);\n\n  const onConnect = useCallback(\n    (params: Connection) => {\n      if (params.source && params.target) {\n        const sourceDevice = devices.find(d => d.id === params.source);\n        const targetDevice = devices.find(d => d.id === params.target);\n\n        if (sourceDevice && targetDevice) {\n          const sourceInterface = findAvailableInterface(sourceDevice);\n          const targetInterface = findAvailableInterface(targetDevice);\n\n          if (sourceInterface && targetInterface) {\n            addConnection({\n              source: params.source,\n              target: params.target,\n              sourceInterface: sourceInterface.name,\n              targetInterface: targetInterface.name,\n              status: 'connected',\n            });\n\n            updateDevice(sourceDevice.id, {\n              interfaces: sourceDevice.interfaces.map(iface =>\n                iface.id === sourceInterface.id ? { ...iface, status: 'up' } : iface\n              )\n            });\n\n            updateDevice(targetDevice.id, {\n              interfaces: targetDevice.interfaces.map(iface =>\n                iface.id === targetInterface.id ? { ...iface, status: 'up' } : iface\n              )\n            });\n          }\n        }\n      }\n    },\n    [devices, addConnection, updateDevice]\n  );\n\n  const onNodeDragStop = useCallback(\n    (event: React.MouseEvent, node: Node) => {\n      updateDevice(node.id, { position: node.position });\n    },\n    [updateDevice]\n  );\n\n  const onSelectionChange = useCallback(\n    (params: OnSelectionChangeParams) => {\n      setSelectedNodes(params.nodes.map(node => node.id));\n    },\n    []\n  );\n\n  const onDrop = useCallback(\n    (event: React.DragEvent) => {\n      event.preventDefault();\n\n      if (!reactFlowInstance) return;\n\n      const reactFlowBounds = reactFlowWrapper.current?.getBoundingClientRect();\n      if (!reactFlowBounds) return;\n\n      const deviceType = event.dataTransfer.getData('application/reactflow');\n      if (!deviceType) return;\n\n      const position = reactFlowInstance.project({\n        x: event.clientX - reactFlowBounds.left,\n        y: event.clientY - reactFlowBounds.top,\n      });\n\n      addDevice({\n        type: deviceType as any,\n        name: `${deviceType.charAt(0).toUpperCase() + deviceType.slice(1)}-${devices.length + 1}`,\n        position,\n        interfaces: generateDefaultInterfaces(deviceType),\n        status: 'offline',\n      });\n    },\n    [reactFlowInstance, devices.length, addDevice]\n  );\n\n  const onDragOver = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n\n  // Handle keyboard shortcuts\n  const onKeyDown = useCallback((event: KeyboardEvent) => {\n    if (event.key === 'Delete' && selectedNodes.length > 0) {\n      // Delete selected devices\n      selectedNodes.forEach(nodeId => {\n        const device = devices.find(d => d.id === nodeId);\n        if (device) {\n          // Remove device and its connections\n          // This will be handled by the store\n        }\n      });\n    }\n  }, [selectedNodes, devices]);\n\n  React.useEffect(() => {\n    document.addEventListener('keydown', onKeyDown);\n    return () => document.removeEventListener('keydown', onKeyDown);\n  }, [onKeyDown]);\n\n  return (\n    <div className=\"flex-1 bg-gray-100\" ref={reactFlowWrapper}>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n        onNodeDragStop={onNodeDragStop}\n        onSelectionChange={onSelectionChange}\n        onInit={setReactFlowInstance}\n        onDrop={onDrop}\n        onDragOver={onDragOver}\n        nodeTypes={nodeTypes}\n        edgeTypes={edgeTypes}\n        connectionMode={ConnectionMode.Loose}\n        fitView\n        fitViewOptions={{\n          padding: 0.2,\n        }}\n        className=\"bg-white\"\n        multiSelectionKeyCode=\"Ctrl\"\n        deleteKeyCode=\"Delete\"\n      >\n        <Background \n          variant=\"dots\" \n          gap={20} \n          size={1} \n          color=\"#e5e7eb\"\n        />\n        \n        <Controls \n          position=\"bottom-left\"\n          showZoom={true}\n          showFitView={true}\n          showInteractive={true}\n        />\n        \n        <MiniMap \n          position=\"bottom-right\"\n          nodeColor={(node) => {\n            const device = node.data?.device;\n            switch (device?.type) {\n              case 'router': return '#3b82f6';\n              case 'switch': return '#10b981'; \n              case 'pc': return '#8b5cf6';\n              case 'server': return '#f59e0b';\n              default: return '#6b7280';\n            }\n          }}\n          maskColor=\"rgba(0, 0, 0, 0.1)\"\n        />\n\n        <Panel position=\"top-left\" className=\"bg-white p-3 rounded-lg shadow-md\">\n          <div className=\"text-sm\">\n            <div className=\"font-medium text-gray-900\">Network Status</div>\n            <div className=\"text-gray-600\">\n              Devices: {devices.length} | Connections: {connections.length}\n            </div>\n            <div className={`text-xs ${isRunning ? 'text-green-600' : 'text-gray-500'}`}>\n              {isRunning ? 'Simulation Running' : 'Simulation Stopped'}\n            </div>\n            {selectedNodes.length > 0 && (\n              <div className=\"text-xs text-blue-600 mt-1\">\n                Selected: {selectedNodes.length} device(s)\n              </div>\n            )}\n          </div>\n        </Panel>\n\n        <Panel position=\"top-center\" className=\"pointer-events-none\">\n          <div className=\"text-gray-400 text-sm text-center\">\n            <div>Drag devices from the left panel</div>\n            <div>Connect devices by dragging between connection points</div>\n            <div>Double-click devices to toggle status • Right-click settings to configure</div>\n          </div>\n        </Panel>\n      </ReactFlow>\n    </div>\n  );\n};\n\nfunction findAvailableInterface(device: any) {\n  return device.interfaces.find((iface: any) => iface.status === 'down');\n}\n\nfunction generateDefaultInterfaces(deviceType: string) {\n  switch (deviceType) {\n    case 'router':\n      return [\n        { id: 'eth0', name: 'GigabitEthernet0/0', status: 'down' as const },\n        { id: 'eth1', name: 'GigabitEthernet0/1', status: 'down' as const },\n        { id: 'serial0', name: 'Serial0/0/0', status: 'down' as const },\n      ];\n    case 'switch':\n      return Array.from({ length: 8 }, (_, i) => ({\n        id: `fa${i}`,\n        name: `FastEthernet0/${i + 1}`,\n        status: 'down' as const,\n      }));\n    case 'pc':\n    case 'server':\n      return [\n        { id: 'eth0', name: 'Ethernet0', status: 'down' as const },\n      ];\n    default:\n      return [];\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 825, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hanym/Desktop/packet-tracer-emulator/frontend/src/utils/cn.ts"],"sourcesContent":["import { type ClassValue, clsx } from 'clsx';\r\nimport { twMerge } from 'tailwind-merge';\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 839, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hanym/Desktop/packet-tracer-emulator/frontend/src/components/ui/Button.tsx"],"sourcesContent":["import React from 'react';\nimport { cn } from '@/utils/cn';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'primary' | 'secondary' | 'danger' | 'success' | 'ghost' | 'outline';\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n  isLoading?: boolean;\n}\n\nexport const Button: React.FC<ButtonProps> = ({\n  className,\n  variant = 'primary',\n  size = 'md',\n  isLoading = false,\n  children,\n  disabled,\n  ...props\n}) => {\n  const baseStyles = 'inline-flex items-center justify-center rounded-lg font-medium transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none relative overflow-hidden group';\n  \n  const variants = {\n    primary: 'bg-gradient-to-r from-blue-600 to-blue-700 text-white hover:from-blue-700 hover:to-blue-800 focus:ring-blue-500 shadow-md hover:shadow-lg hover:scale-105',\n    secondary: 'bg-gray-100 text-gray-700 hover:bg-gray-200 focus:ring-gray-500 border border-gray-200 hover:border-gray-300 hover:scale-105',\n    danger: 'bg-gradient-to-r from-red-500 to-red-600 text-white hover:from-red-600 hover:to-red-700 focus:ring-red-500 shadow-md hover:shadow-lg hover:scale-105',\n    success: 'bg-gradient-to-r from-green-500 to-green-600 text-white hover:from-green-600 hover:to-green-700 focus:ring-green-500 shadow-md hover:shadow-lg hover:scale-105',\n    ghost: 'text-gray-600 hover:text-gray-900 hover:bg-gray-100 focus:ring-gray-500 hover:scale-105',\n    outline: 'border-2 border-blue-300 text-blue-700 hover:bg-blue-50 hover:border-blue-400 focus:ring-blue-500 hover:scale-105',\n  };\n\n  const sizes = {\n    xs: 'h-7 px-2 text-xs',\n    sm: 'h-8 px-3 text-sm',\n    md: 'h-10 px-4 text-sm',\n    lg: 'h-12 px-6 text-base',\n    xl: 'h-14 px-8 text-lg',\n  };\n\n  return (\n    <button\n      className={cn(baseStyles, variants[variant], sizes[size], className)}\n      disabled={disabled || isLoading}\n      {...props}\n    >\n      {/* Shimmer effect for primary buttons */}\n      {(variant === 'primary' || variant === 'success' || variant === 'danger') && (\n        <div className=\"absolute inset-0 -top-1 -bottom-1 bg-gradient-to-r from-transparent via-white/20 to-transparent opacity-0 group-hover:opacity-100 group-hover:animate-shimmer transition-opacity duration-500\" />\n      )}\n      \n      {/* Loading spinner */}\n      {isLoading && (\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <div className=\"w-4 h-4 border-2 border-current border-t-transparent rounded-full animate-spin\" />\n        </div>\n      )}\n      \n      {/* Content */}\n      <div className={cn('flex items-center gap-2 transition-opacity', isLoading && 'opacity-0')}>\n        {children}\n      </div>\n    </button>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;;;AAQO,MAAM,SAAgC,CAAC,EAC5C,SAAS,EACT,UAAU,SAAS,EACnB,OAAO,IAAI,EACX,YAAY,KAAK,EACjB,QAAQ,EACR,QAAQ,EACR,GAAG,OACJ;IACC,MAAM,aAAa;IAEnB,MAAM,WAAW;QACf,SAAS;QACT,WAAW;QACX,QAAQ;QACR,SAAS;QACT,OAAO;QACP,SAAS;IACX;IAEA,MAAM,QAAQ;QACZ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IAEA,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,kHAAA,CAAA,KAAE,AAAD,EAAE,YAAY,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,KAAK,EAAE;QAC1D,UAAU,YAAY;QACrB,GAAG,KAAK;;YAGR,CAAC,YAAY,aAAa,YAAY,aAAa,YAAY,QAAQ,mBACtE,8OAAC;gBAAI,WAAU;;;;;;YAIhB,2BACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;;;;;;;;;;0BAKnB,8OAAC;gBAAI,WAAW,CAAA,GAAA,kHAAA,CAAA,KAAE,AAAD,EAAE,8CAA8C,aAAa;0BAC3E;;;;;;;;;;;;AAIT","debugId":null}},
    {"offset": {"line": 908, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hanym/Desktop/packet-tracer-emulator/frontend/src/components/ui/FormInput.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\n\ninterface FormInputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  label: string;\n  error?: string;\n  hint?: string;\n}\n\nexport const FormInput: React.FC<FormInputProps> = ({\n  label,\n  error,\n  hint,\n  className = '',\n  ...props\n}) => {\n  return (\n    <div className=\"space-y-1\">\n      <label className=\"block text-sm font-medium text-gray-700\">\n        {label}\n        {props.required && <span className=\"text-red-500 ml-1\">*</span>}\n      </label>\n      <input\n        className={`w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-gray-900 bg-white placeholder-gray-400 ${\n          error ? 'border-red-300 focus:border-red-500 focus:ring-red-500' : ''\n        } ${className}`}\n        {...props}\n      />\n      {error && (\n        <p className=\"text-sm text-red-600\">{error}</p>\n      )}\n      {hint && !error && (\n        <p className=\"text-sm text-gray-500\">{hint}</p>\n      )}\n    </div>\n  );\n};\n\ninterface FormSelectProps extends React.SelectHTMLAttributes<HTMLSelectElement> {\n  label: string;\n  error?: string;\n  hint?: string;\n  options: { value: string; label: string }[];\n}\n\nexport const FormSelect: React.FC<FormSelectProps> = ({\n  label,\n  error,\n  hint,\n  options,\n  className = '',\n  ...props\n}) => {\n  return (\n    <div className=\"space-y-1\">\n      <label className=\"block text-sm font-medium text-gray-700\">\n        {label}\n        {props.required && <span className=\"text-red-500 ml-1\">*</span>}\n      </label>\n      <select\n        className={`w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-gray-900 bg-white ${\n          error ? 'border-red-300 focus:border-red-500 focus:ring-red-500' : ''\n        } ${className}`}\n        {...props}\n      >\n        {options.map((option) => (\n          <option key={option.value} value={option.value} className=\"text-gray-900\">\n            {option.label}\n          </option>\n        ))}\n      </select>\n      {error && (\n        <p className=\"text-sm text-red-600\">{error}</p>\n      )}\n      {hint && !error && (\n        <p className=\"text-sm text-gray-500\">{hint}</p>\n      )}\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;;AAAA;;AAUO,MAAM,YAAsC,CAAC,EAClD,KAAK,EACL,KAAK,EACL,IAAI,EACJ,YAAY,EAAE,EACd,GAAG,OACJ;IACC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAM,WAAU;;oBACd;oBACA,MAAM,QAAQ,kBAAI,8OAAC;wBAAK,WAAU;kCAAoB;;;;;;;;;;;;0BAEzD,8OAAC;gBACC,WAAW,CAAC,mLAAmL,EAC7L,QAAQ,2DAA2D,GACpE,CAAC,EAAE,WAAW;gBACd,GAAG,KAAK;;;;;;YAEV,uBACC,8OAAC;gBAAE,WAAU;0BAAwB;;;;;;YAEtC,QAAQ,CAAC,uBACR,8OAAC;gBAAE,WAAU;0BAAyB;;;;;;;;;;;;AAI9C;AASO,MAAM,aAAwC,CAAC,EACpD,KAAK,EACL,KAAK,EACL,IAAI,EACJ,OAAO,EACP,YAAY,EAAE,EACd,GAAG,OACJ;IACC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAM,WAAU;;oBACd;oBACA,MAAM,QAAQ,kBAAI,8OAAC;wBAAK,WAAU;kCAAoB;;;;;;;;;;;;0BAEzD,8OAAC;gBACC,WAAW,CAAC,8JAA8J,EACxK,QAAQ,2DAA2D,GACpE,CAAC,EAAE,WAAW;gBACd,GAAG,KAAK;0BAER,QAAQ,GAAG,CAAC,CAAC,uBACZ,8OAAC;wBAA0B,OAAO,OAAO,KAAK;wBAAE,WAAU;kCACvD,OAAO,KAAK;uBADF,OAAO,KAAK;;;;;;;;;;YAK5B,uBACC,8OAAC;gBAAE,WAAU;0BAAwB;;;;;;YAEtC,QAAQ,CAAC,uBACR,8OAAC;gBAAE,WAAU;0BAAyB;;;;;;;;;;;;AAI9C","debugId":null}},
    {"offset": {"line": 1034, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hanym/Desktop/packet-tracer-emulator/frontend/src/components/network/ControlPanel.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { Button } from '@/components/ui/Button';\nimport { FormInput, FormSelect } from '@/components/ui/FormInput';\nimport { useNetworkStore } from '@/store/networkStore';\nimport { FiTarget, FiGlobe, FiMapPin, FiPlay, FiSquare } from 'react-icons/fi';\n\nexport const ControlPanel: React.FC = () => {\n  const { \n    isRunning, \n    startSimulation, \n    stopSimulation, \n    resetSimulation,\n    devices,\n    addPacket,\n    updatePacket\n  } = useNetworkStore();\n\n  const [selectedSource, setSelectedSource] = useState('');\n  const [selectedTarget, setSelectedTarget] = useState('');\n  const [showQuickActionForm, setShowQuickActionForm] = useState<string | null>(null);\n\n  const availableDevices = devices.filter(device => \n    device.status === 'online' && device.interfaces.some(iface => iface.status === 'up')\n  );\n\n  const simulatePacketJourney = (packetId: string, destinationType: 'success' | 'failure' | 'timeout') => {\n    const delays = {\n      success: 4000, // 4 seconds for successful delivery\n      failure: 2000, // 2 seconds before dropping\n      timeout: 6000, // 6 seconds for timeout\n    };\n\n    setTimeout(() => {\n      if (destinationType === 'success') {\n        updatePacket(packetId, { status: 'received' });\n      } else if (destinationType === 'failure') {\n        updatePacket(packetId, { status: 'dropped' });\n      } else {\n        updatePacket(packetId, { status: 'dropped' });\n      }\n    }, delays[destinationType]);\n  };\n\n  const handleSendPing = () => {\n    if (!selectedSource || !selectedTarget) {\n      alert('Please select both source and target devices');\n      return;\n    }\n\n    if (selectedSource === selectedTarget) {\n      alert('Source and target must be different devices');\n      return;\n    }\n\n    const packetId = `packet-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n    \n    addPacket({\n      id: packetId,\n      source: selectedSource,\n      destination: selectedTarget,\n      protocol: 'ICMP',\n      status: 'transmitted',\n      path: [selectedSource, selectedTarget],\n      timestamp: Date.now(),\n    });\n\n    // Simulate packet completion (90% success rate)\n    const success = Math.random() > 0.1;\n    simulatePacketJourney(packetId, success ? 'success' : 'failure');\n\n    setShowQuickActionForm(null);\n  };\n\n  const handleDNSLookup = () => {\n    if (!selectedSource) {\n      alert('Please select a source device');\n      return;\n    }\n\n    // Find a server that could act as DNS server\n    const dnsServer = devices.find(device => \n      device.type === 'server' && \n      device.status === 'online' &&\n      device.config?.services?.some((service: any) => service.name === 'DNS')\n    );\n\n    if (!dnsServer) {\n      alert('No DNS server found in the network. Add a server and configure DNS service.');\n      return;\n    }\n\n    const packetId = `packet-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n\n    addPacket({\n      id: packetId,\n      source: selectedSource,\n      destination: dnsServer.id,\n      protocol: 'DNS',\n      status: 'transmitted',\n      path: [selectedSource, dnsServer.id],\n      timestamp: Date.now(),\n    });\n\n    // DNS typically succeeds\n    simulatePacketJourney(packetId, 'success');\n\n    setShowQuickActionForm(null);\n  };\n\n  const handleTraceRoute = () => {\n    if (!selectedSource || !selectedTarget) {\n      alert('Please select both source and target devices');\n      return;\n    }\n\n    if (selectedSource === selectedTarget) {\n      alert('Source and target must be different devices');\n      return;\n    }\n\n    // Find path through routers\n    const routers = devices.filter(d => d.type === 'router' && d.status === 'online');\n    const path = [selectedSource];\n    \n    if (routers.length > 0 && routers[0].id !== selectedSource && routers[0].id !== selectedTarget) {\n      path.push(routers[0].id);\n    }\n    \n    path.push(selectedTarget);\n\n    const packetId = `packet-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n\n    addPacket({\n      id: packetId,\n      source: selectedSource,\n      destination: selectedTarget,\n      protocol: 'ICMP',\n      status: 'transmitted',\n      path: path,\n      timestamp: Date.now(),\n    });\n\n    // Traceroute has higher chance of completing\n    simulatePacketJourney(packetId, 'success');\n\n    setShowQuickActionForm(null);\n  };\n\n  const renderQuickActionForm = () => {\n    if (!showQuickActionForm) return null;\n\n    return (\n      <div className=\"mt-4 p-4 bg-gray-50 rounded-lg border\">\n        <h5 className=\"font-medium text-gray-900 mb-3\">\n          {showQuickActionForm === 'ping' && 'Send Ping'}\n          {showQuickActionForm === 'dns' && 'DNS Lookup'}\n          {showQuickActionForm === 'traceroute' && 'Trace Route'}\n        </h5>\n\n        <div className=\"space-y-3\">\n          <FormSelect\n            label=\"Source Device\"\n            value={selectedSource}\n            onChange={(e) => setSelectedSource(e.target.value)}\n            options={[\n              { value: '', label: 'Select source device...' },\n              ...availableDevices.map(device => ({\n                value: device.id,\n                label: `${device.name} (${device.type})`\n              }))\n            ]}\n            required\n          />\n\n          {(showQuickActionForm === 'ping' || showQuickActionForm === 'traceroute') && (\n            <FormSelect\n              label=\"Target Device\"\n              value={selectedTarget}\n              onChange={(e) => setSelectedTarget(e.target.value)}\n              options={[\n                { value: '', label: 'Select target device...' },\n                ...availableDevices\n                  .filter(device => device.id !== selectedSource)\n                  .map(device => ({\n                    value: device.id,\n                    label: `${device.name} (${device.type})`\n                  }))\n              ]}\n              required\n            />\n          )}\n\n          <div className=\"flex space-x-2\">\n            <Button\n              onClick={() => {\n                if (showQuickActionForm === 'ping') handleSendPing();\n                else if (showQuickActionForm === 'dns') handleDNSLookup();\n                else if (showQuickActionForm === 'traceroute') handleTraceRoute();\n              }}\n              variant=\"primary\"\n              size=\"sm\"\n              disabled={!isRunning || availableDevices.length === 0}\n            >\n              Execute\n            </Button>\n            <Button\n              onClick={() => setShowQuickActionForm(null)}\n              variant=\"secondary\"\n              size=\"sm\"\n            >\n              Cancel\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Simulation Control</h3>\n      \n      <div className=\"space-y-3 mb-6\">\n        <Button \n          onClick={isRunning ? stopSimulation : startSimulation}\n          variant={isRunning ? 'danger' : 'success'}\n          className=\"w-full\"\n        >\n          {isRunning ? (\n            <>\n              <FiSquare className=\"w-4 h-4 mr-2\" />\n              Stop Simulation\n            </>\n          ) : (\n            <>\n              <FiPlay className=\"w-4 h-4 mr-2\" />\n              Start Simulation\n            </>\n          )}\n        </Button>\n        \n        <Button \n          onClick={resetSimulation}\n          variant=\"secondary\"\n          className=\"w-full\"\n        >\n          Reset Network\n        </Button>\n      </div>\n\n      <div className=\"mb-6\">\n        <h4 className=\"text-md font-medium text-gray-900 mb-2\">Quick Actions</h4>\n        \n        {!isRunning && (\n          <div className=\"text-sm text-gray-500 mb-3 p-2 bg-yellow-50 rounded border border-yellow-200\">\n            Start simulation to enable quick actions\n          </div>\n        )}\n\n        {availableDevices.length === 0 && isRunning && (\n          <div className=\"text-sm text-gray-500 mb-3 p-2 bg-orange-50 rounded border border-orange-200\">\n            No online devices with active interfaces found\n          </div>\n        )}\n\n        <div className=\"space-y-2\">\n          <Button \n            variant=\"secondary\" \n            size=\"sm\" \n            className=\"w-full\"\n            onClick={() => setShowQuickActionForm('ping')}\n            disabled={!isRunning || availableDevices.length < 2}\n          >\n            <FiTarget className=\"w-4 h-4 mr-2\" />\n            Send Ping\n          </Button>\n          \n          <Button \n            variant=\"secondary\" \n            size=\"sm\" \n            className=\"w-full\"\n            onClick={() => setShowQuickActionForm('dns')}\n            disabled={!isRunning || availableDevices.length === 0}\n          >\n            <FiGlobe className=\"w-4 h-4 mr-2\" />\n            DNS Lookup\n          </Button>\n          \n          <Button \n            variant=\"secondary\" \n            size=\"sm\" \n            className=\"w-full\"\n            onClick={() => setShowQuickActionForm('traceroute')}\n            disabled={!isRunning || availableDevices.length < 2}\n          >\n            <FiMapPin className=\"w-4 h-4 mr-2\" />\n            Trace Route\n          </Button>\n        </div>\n\n        {renderQuickActionForm()}\n      </div>\n\n      {/* Network Statistics */}\n      <div className=\"border-t pt-4\">\n        <h4 className=\"text-md font-medium text-gray-900 mb-2\">Network Status</h4>\n        <div className=\"text-sm space-y-1\">\n          <div className=\"flex justify-between\">\n            <span className=\"text-gray-600\">Total Devices:</span>\n            <span className=\"font-medium\">{devices.length}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <span className=\"text-gray-600\">Online Devices:</span>\n            <span className=\"font-medium text-green-600\">\n              {devices.filter(d => d.status === 'online').length}\n            </span>\n          </div>\n          <div className=\"flex justify-between\">\n            <span className=\"text-gray-600\">Active Interfaces:</span>\n            <span className=\"font-medium text-blue-600\">\n              {devices.reduce((sum, device) => \n                sum + device.interfaces.filter(iface => iface.status === 'up').length, 0\n              )}\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1552, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hanym/Desktop/packet-tracer-emulator/frontend/src/components/network/DevicePanel.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { DragEvent } from 'react';\nimport { motion } from 'framer-motion';\nimport { \n  FiWifi, \n  FiMonitor, \n  FiServer, \n  FiHardDrive,\n  FiCircle,\n  FiTrash2,\n  FiEdit3,\n  FiCopy\n} from 'react-icons/fi';\nimport { Button } from '@/components/ui/Button';\nimport { useNetworkStore } from '@/store/networkStore';\nimport { NetworkDevice } from '@/types';\n\nconst deviceTypes = [\n  { \n    type: 'router', \n    name: 'Router', \n    icon: FiWifi,\n    color: 'bg-blue-500',\n    description: 'Layer 3 routing device'\n  },\n  { \n    type: 'switch', \n    name: 'Switch', \n    icon: FiHardDrive,\n    color: 'bg-green-500',\n    description: 'Layer 2 switching device'\n  },\n  { \n    type: 'pc', \n    name: 'PC', \n    icon: FiMonitor,\n    color: 'bg-purple-500',\n    description: 'End-user workstation'\n  },\n  { \n    type: 'server', \n    name: 'Server', \n    icon: FiServer,\n    color: 'bg-orange-500',\n    description: 'Network server device'\n  },\n] as const;\n\ninterface DevicePanelProps {\n  onOpenDeviceConfig?: (deviceId: string) => void;\n}\n\nconst DraggableDeviceItem: React.FC<{ deviceType: typeof deviceTypes[0] }> = ({ \n  deviceType \n}) => {\n  const handleDragStart = (event: DragEvent) => {\n    event.dataTransfer.setData('application/reactflow', deviceType.type);\n    event.dataTransfer.effectAllowed = 'move';\n  };\n\n  const IconComponent = deviceType.icon;\n\n  return (\n    <motion.div\n      whileHover={{ scale: 1.02 }}\n      whileTap={{ scale: 0.98 }}\n      className=\"p-3 bg-white border border-gray-200 rounded-lg cursor-grab active:cursor-grabbing hover:border-gray-300 hover:shadow-sm transition-all\"\n      draggable\n      onDragStart={handleDragStart}\n    >\n      <div className=\"flex items-center space-x-3\">\n        <div className={`p-2 rounded-lg ${deviceType.color}`}>\n          <IconComponent className=\"w-5 h-5 text-white\" />\n        </div>\n        <div className=\"flex-1\">\n          <div className=\"font-medium text-gray-900\">{deviceType.name}</div>\n          <div className=\"text-xs text-gray-500\">{deviceType.description}</div>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nconst DeviceListItem: React.FC<{ \n  device: NetworkDevice; \n  onEdit: () => void;\n  onDelete: () => void;\n  onDuplicate: () => void;\n}> = ({ device, onEdit, onDelete, onDuplicate }) => {\n  const deviceType = deviceTypes.find(d => d.type === device.type);\n  const IconComponent = deviceType?.icon || FiCircle;\n\n  const statusColors = {\n    online: 'text-green-500',\n    offline: 'text-gray-400',\n    error: 'text-red-500',\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 10 }}\n      animate={{ opacity: 1, y: 0 }}\n      exit={{ opacity: 0, y: -10 }}\n      className=\"p-3 bg-gray-50 rounded-lg border border-gray-100\"\n    >\n      <div className=\"flex items-start justify-between\">\n        <div className=\"flex items-center space-x-3 flex-1\">\n          <div className={`p-1.5 rounded ${deviceType?.color || 'bg-gray-500'}`}>\n            <IconComponent className=\"w-4 h-4 text-white\" />\n          </div>\n          <div className=\"flex-1 min-w-0\">\n            <div className=\"font-medium text-gray-900 truncate\">{device.name}</div>\n            <div className=\"text-xs text-gray-500 capitalize\">{device.type}</div>\n            <div className=\"flex items-center space-x-1 mt-1\">\n              <FiCircle className={`w-2 h-2 ${statusColors[device.status]}`} />\n              <span className=\"text-xs text-gray-600 capitalize\">{device.status}</span>\n            </div>\n            {device.config?.hostname && (\n              <div className=\"text-xs text-blue-600 mt-1\">\n                {device.config.hostname}\n              </div>\n            )}\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-1\">\n          <button\n            onClick={onDuplicate}\n            className=\"p-1 text-gray-400 hover:text-gray-600\"\n            title=\"Duplicate device\"\n          >\n            <FiCopy className=\"w-3 h-3\" />\n          </button>\n          <button\n            onClick={onEdit}\n            className=\"p-1 text-gray-400 hover:text-blue-600\"\n            title=\"Configure device\"\n          >\n            <FiEdit3 className=\"w-3 h-3\" />\n          </button>\n          <button\n            onClick={onDelete}\n            className=\"p-1 text-gray-400 hover:text-red-600\"\n            title=\"Delete device\"\n          >\n            <FiTrash2 className=\"w-3 h-3\" />\n          </button>\n        </div>\n      </div>\n      \n      {device.interfaces.length > 0 && (\n        <div className=\"mt-2 text-xs text-gray-500\">\n          Interfaces: {device.interfaces.filter(i => i.status === 'up').length}/{device.interfaces.length} active\n        </div>\n      )}\n    </motion.div>\n  );\n};\n\nexport const DevicePanel: React.FC<DevicePanelProps> = ({ onOpenDeviceConfig }) => {\n  const { devices, addDevice, removeDevice, updateDevice } = useNetworkStore();\n\n  const handleQuickAdd = (type: typeof deviceTypes[0]['type']) => {\n    addDevice({\n      type,\n      name: `${type.charAt(0).toUpperCase() + type.slice(1)}-${devices.length + 1}`,\n      position: { x: 100 + Math.random() * 200, y: 100 + Math.random() * 200 },\n      interfaces: generateDefaultInterfaces(type),\n      status: 'offline',\n    });\n  };\n\n  const handleDuplicateDevice = (device: NetworkDevice) => {\n    addDevice({\n      ...device,\n      name: `${device.name}-Copy`,\n      position: { \n        x: device.position.x + 50, \n        y: device.position.y + 50 \n      },\n    });\n  };\n\n  const handleEditDevice = (deviceId: string) => {\n    if (onOpenDeviceConfig) {\n      onOpenDeviceConfig(deviceId);\n    }\n  };\n\n  const handleDeleteDevice = (deviceId: string) => {\n    removeDevice(deviceId);\n  };\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      <div className=\"p-4 border-b border-gray-200\">\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Network Devices</h3>\n        \n        {/* Device Library */}\n        <div className=\"space-y-2 mb-6\">\n          <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Device Library</h4>\n          <div className=\"text-xs text-gray-500 mb-3\">\n            Drag devices to the canvas to add them\n          </div>\n          {deviceTypes.map((deviceType) => (\n            <DraggableDeviceItem \n              key={deviceType.type} \n              deviceType={deviceType}\n            />\n          ))}\n        </div>\n\n        {/* Quick Add Buttons */}\n        <div className=\"space-y-2\">\n          <h4 className=\"text-sm font-medium text-gray-700\">Quick Add</h4>\n          <div className=\"grid grid-cols-2 gap-2\">\n            {deviceTypes.map((device) => (\n              <Button\n                key={device.type}\n                onClick={() => handleQuickAdd(device.type)}\n                variant=\"secondary\"\n                size=\"sm\"\n                className=\"text-xs\"\n              >\n                + {device.name}\n              </Button>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Device List */}\n      <div className=\"flex-1 p-4 overflow-y-auto\">\n        <div className=\"flex items-center justify-between mb-3\">\n          <h4 className=\"text-sm font-medium text-gray-700\">\n            Active Devices ({devices.length})\n          </h4>\n          {devices.length > 0 && (\n            <Button\n              onClick={() => devices.forEach(d => removeDevice(d.id))}\n              variant=\"danger\"\n              size=\"sm\"\n              className=\"text-xs\"\n            >\n              Clear All\n            </Button>\n          )}\n        </div>\n\n        {devices.length === 0 ? (\n          <div className=\"text-center py-8\">\n            <div className=\"text-gray-400 mb-2\">No devices in network</div>\n            <div className=\"text-xs text-gray-500\">\n              Drag devices from above or use quick add buttons\n            </div>\n          </div>\n        ) : (\n          <div className=\"space-y-2\">\n            {devices.map((device) => (\n              <DeviceListItem\n                key={device.id}\n                device={device}\n                onEdit={() => handleEditDevice(device.id)}\n                onDelete={() => handleDeleteDevice(device.id)}\n                onDuplicate={() => handleDuplicateDevice(device)}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction generateDefaultInterfaces(deviceType: string) {\n  switch (deviceType) {\n    case 'router':\n      return [\n        { id: 'eth0', name: 'GigabitEthernet0/0', status: 'down' as const },\n        { id: 'eth1', name: 'GigabitEthernet0/1', status: 'down' as const },\n        { id: 'serial0', name: 'Serial0/0/0', status: 'down' as const },\n      ];\n    case 'switch':\n      return Array.from({ length: 8 }, (_, i) => ({\n        id: `fa${i}`,\n        name: `FastEthernet0/${i + 1}`,\n        status: 'down' as const,\n      }));\n    case 'pc':\n    case 'server':\n      return [\n        { id: 'eth0', name: 'Ethernet0', status: 'down' as const },\n      ];\n    default:\n      return [];\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2112, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hanym/Desktop/packet-tracer-emulator/frontend/src/components/network/PacketFlow.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { \n  FiTrash2, \n  FiFilter,\n  FiClock,\n  FiTarget,\n  FiZap,\n  FiX,\n  FiChevronDown,\n  FiChevronRight\n} from 'react-icons/fi';\nimport { Button } from '@/components/ui/Button';\nimport { useNetworkStore } from '@/store/networkStore';\nimport { PacketFlow as PacketFlowType } from '@/types';\n\nconst protocolColors = {\n  ICMP: 'bg-blue-100 text-blue-800 border-blue-200',\n  TCP: 'bg-green-100 text-green-800 border-green-200',\n  UDP: 'bg-purple-100 text-purple-800 border-purple-200',\n  ARP: 'bg-orange-100 text-orange-800 border-orange-200',\n  DNS: 'bg-red-100 text-red-800 border-red-200',\n};\n\nconst statusColors = {\n  pending: 'bg-yellow-100 text-yellow-800 border-yellow-200',\n  transmitted: 'bg-blue-100 text-blue-800 border-blue-200',\n  received: 'bg-green-100 text-green-800 border-green-200',\n  dropped: 'bg-red-100 text-red-800 border-red-200',\n};\n\nconst statusIcons = {\n  pending: FiClock,\n  transmitted: FiZap,\n  received: FiTarget,\n  dropped: FiX,\n};\n\nexport const PacketFlow: React.FC = () => {\n  const { \n    packets, \n    devices, \n    clearPackets, \n    addPacket, \n    isRunning \n  } = useNetworkStore();\n  \n  const [filter, setFilter] = useState<string>('all');\n  const [selectedPacket, setSelectedPacket] = useState<string | null>(null);\n\n  const filteredPackets = packets.filter(packet => {\n    if (filter === 'all') return true;\n    return packet.protocol === filter || packet.status === filter;\n  });\n\n  const sortedPackets = [...filteredPackets].sort((a, b) => b.timestamp - a.timestamp);\n\n  const handleSendTestPacket = (protocol: PacketFlowType['protocol']) => {\n    if (devices.length < 2) {\n      alert('Need at least 2 devices to send packets');\n      return;\n    }\n\n    if (!isRunning) {\n      alert('Please start simulation first');\n      return;\n    }\n\n    const onlineDevices = devices.filter(device => \n      device.status === 'online' && \n      device.interfaces.some(iface => iface.status === 'up')\n    );\n\n    if (onlineDevices.length < 2) {\n      alert('Need at least 2 online devices with active interfaces');\n      return;\n    }\n\n    const sourceDevice = onlineDevices[0];\n    const targetDevice = onlineDevices[1];\n\n    addPacket({\n      source: sourceDevice.id,\n      destination: targetDevice.id,\n      protocol,\n      status: 'transmitted',\n      path: [sourceDevice.id, targetDevice.id],\n      timestamp: Date.now(),\n    });\n  };\n\n  const getDeviceInfo = (deviceId: string) => {\n    const device = devices.find(d => d.id === deviceId);\n    return {\n      name: device?.name || `Device-${deviceId.slice(-4)}`,\n      type: device?.type || 'Unknown',\n      ip: device?.config?.ipAddress || device?.interfaces?.[0]?.ipAddress || 'No IP',\n      status: device?.status || 'Unknown'\n    };\n  };\n\n  return (\n    <div className=\"w-full h-full bg-white border-t border-gray-200\">\n      <div className=\"bg-gray-50 border-b border-gray-200 p-4\">\n        <div className=\"flex items-center justify-between mb-3\">\n          <h3 className=\"text-lg font-medium text-gray-900\">\n            Packet Flow Monitor ({packets.length} total packets)\n          </h3>\n          <div className=\"flex items-center space-x-2\">\n            <Button\n              onClick={clearPackets}\n              variant=\"danger\"\n              size=\"sm\"\n              disabled={packets.length === 0}\n            >\n              <FiTrash2 className=\"w-4 h-4\" />\n              Clear\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"mb-3\">\n          <span className=\"text-sm font-medium text-gray-700\">Send test packet:</span>\n          <div className=\"flex flex-wrap gap-2 mt-2\">\n            {(['ICMP', 'TCP', 'UDP', 'ARP', 'DNS'] as const).map((protocol) => (\n              <Button\n                key={protocol}\n                onClick={() => handleSendTestPacket(protocol)}\n                variant=\"secondary\"\n                size=\"sm\"\n                disabled={!isRunning || devices.length < 2}\n                className=\"text-xs px-3 py-1\"\n              >\n                {protocol}\n              </Button>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          <FiFilter className=\"w-4 h-4 text-gray-400\" />\n          <select\n            value={filter}\n            onChange={(e) => setFilter(e.target.value)}\n            className=\"text-sm border border-gray-300 rounded px-2 py-1 bg-white text-gray-900\"\n          >\n            <option value=\"all\">All Packets</option>\n            <option value=\"ICMP\">ICMP Only</option>\n            <option value=\"TCP\">TCP Only</option>\n            <option value=\"UDP\">UDP Only</option>\n            <option value=\"ARP\">ARP Only</option>\n            <option value=\"DNS\">DNS Only</option>\n            <option value=\"received\">Received</option>\n            <option value=\"transmitted\">In Transit</option>\n            <option value=\"dropped\">Dropped</option>\n          </select>\n          <span className=\"text-xs text-gray-500\">\n            Showing {sortedPackets.length} of {packets.length} packets\n          </span>\n        </div>\n      </div>\n\n      <div className=\"flex-1 bg-white\" style={{ height: 'calc(100% - 280px)', minHeight: '200px' }}>\n        <div className=\"h-full overflow-y-auto p-4\">\n          {packets.length === 0 ? (\n            <div className=\"flex items-center justify-center h-full\">\n              <div className=\"text-center py-8\">\n                <div className=\"text-gray-400 mb-2 text-lg\">No packets to display</div>\n                <div className=\"text-sm text-gray-500\">\n                  Start simulation and send test packets to see activity\n                </div>\n              </div>\n            </div>\n          ) : sortedPackets.length === 0 ? (\n            <div className=\"flex items-center justify-center h-full\">\n              <div className=\"text-center py-8\">\n                <div className=\"text-gray-400 mb-2 text-lg\">No packets match filter</div>\n                <div className=\"text-sm text-gray-500\">\n                  Try changing filter to \"All Packets\"\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"space-y-3\">\n              {sortedPackets.map((packet, index) => {\n                const sourceInfo = getDeviceInfo(packet.source);\n                const destInfo = getDeviceInfo(packet.destination);\n                const StatusIcon = statusIcons[packet.status];\n                const isSelected = selectedPacket === packet.id;\n\n                return (\n                  <div\n                    key={packet.id}\n                    className={`p-4 border-2 rounded-lg cursor-pointer transition-all shadow-sm ${\n                      isSelected \n                        ? 'border-blue-400 bg-blue-50 shadow-md' \n                        : 'border-gray-200 bg-white hover:bg-gray-50 hover:border-gray-300 hover:shadow-md'\n                    }`}\n                    onClick={() => setSelectedPacket(isSelected ? null : packet.id)}\n                  >\n                    <div className=\"flex items-center justify-between mb-3\">\n                      <div className=\"flex items-center space-x-3\">\n                        <span className={`px-3 py-1 rounded-full text-xs font-bold border-2 ${protocolColors[packet.protocol]}`}>\n                          {packet.protocol}\n                        </span>\n                        <span className={`px-3 py-1 rounded-full text-xs font-bold border-2 ${statusColors[packet.status]}`}>\n                          <StatusIcon className=\"w-3 h-3 inline mr-1\" />\n                          {packet.status.toUpperCase()}\n                        </span>\n                      </div>\n                      <div className=\"text-sm text-gray-600 font-mono\">\n                        {new Date(packet.timestamp).toLocaleTimeString()}\n                      </div>\n                    </div>\n\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"font-mono text-base\">\n                        <span className=\"font-bold text-blue-600\">{sourceInfo.name}</span>\n                        <span className=\"mx-3 text-gray-400 text-lg\"></span>\n                        <span className=\"font-bold text-green-600\">{destInfo.name}</span>\n                      </div>\n                      <div className=\"text-gray-500\">\n                        {isSelected ? (\n                          <FiChevronDown className=\"w-5 h-5\" />\n                        ) : (\n                          <FiChevronRight className=\"w-5 h-5\" />\n                        )}\n                      </div>\n                    </div>\n\n                    <div className=\"text-sm text-gray-600 mt-2\">\n                      <strong>Path:</strong> {packet.path.map(id => getDeviceInfo(id).name).join(' -> ')}\n                    </div>\n\n                    {isSelected && (\n                      <div className=\"mt-4 pt-4 border-t-2 border-gray-200\">\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                          <div className=\"bg-blue-50 p-4 rounded-lg\">\n                            <h6 className=\"font-bold text-gray-900 mb-3 text-base\">Packet Details</h6>\n                            <div className=\"space-y-2 text-sm\">\n                              <div className=\"flex justify-between\">\n                                <span className=\"text-gray-700 font-medium\">ID:</span>\n                                <span className=\"font-mono text-gray-900\">{packet.id.slice(-12)}</span>\n                              </div>\n                              <div className=\"flex justify-between\">\n                                <span className=\"text-gray-700 font-medium\">Protocol:</span>\n                                <span className=\"font-bold\">{packet.protocol}</span>\n                              </div>\n                              <div className=\"flex justify-between\">\n                                <span className=\"text-gray-700 font-medium\">Status:</span>\n                                <span className={`font-bold ${\n                                  packet.status === 'received' ? 'text-green-600' :\n                                  packet.status === 'dropped' ? 'text-red-600' :\n                                  packet.status === 'transmitted' ? 'text-blue-600' :\n                                  'text-yellow-600'\n                                }`}>\n                                  {packet.status.toUpperCase()}\n                                </span>\n                              </div>\n                              <div className=\"flex justify-between\">\n                                <span className=\"text-gray-700 font-medium\">Time:</span>\n                                <span className=\"font-mono text-sm\">{new Date(packet.timestamp).toLocaleString()}</span>\n                              </div>\n                            </div>\n                          </div>\n                          \n                          <div className=\"bg-green-50 p-4 rounded-lg\">\n                            <h6 className=\"font-bold text-gray-900 mb-3 text-base\">Network Info</h6>\n                            <div className=\"space-y-3 text-sm\">\n                              <div className=\"bg-white p-3 rounded border\">\n                                <div className=\"font-bold text-blue-600 mb-1\">Source: {sourceInfo.name}</div>\n                                <div className=\"text-gray-600\">Type: {sourceInfo.type}</div>\n                                <div className=\"text-gray-600\">IP: {sourceInfo.ip}</div>\n                                <div className=\"text-gray-600\">Status: {sourceInfo.status}</div>\n                              </div>\n                              <div className=\"bg-white p-3 rounded border\">\n                                <div className=\"font-bold text-green-600 mb-1\">Destination: {destInfo.name}</div>\n                                <div className=\"text-gray-600\">Type: {destInfo.type}</div>\n                                <div className=\"text-gray-600\">IP: {destInfo.ip}</div>\n                                <div className=\"text-gray-600\">Status: {destInfo.status}</div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"bg-gray-50 border-t border-gray-200 p-4\">\n        <div className=\"grid grid-cols-4 gap-4\">\n          <div className=\"text-center\">\n            <div className=\"font-bold text-green-600 text-2xl\">\n              {packets.filter(p => p.status === 'received').length}\n            </div>\n            <div className=\"text-gray-700 font-medium\">Received</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"font-bold text-blue-600 text-2xl\">\n              {packets.filter(p => p.status === 'transmitted').length}\n            </div>\n            <div className=\"text-gray-700 font-medium\">In Transit</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"font-bold text-red-600 text-2xl\">\n              {packets.filter(p => p.status === 'dropped').length}\n            </div>\n            <div className=\"text-gray-700 font-medium\">Dropped</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"font-bold text-yellow-600 text-2xl\">\n              {packets.filter(p => p.status === 'pending').length}\n            </div>\n            <div className=\"text-gray-700 font-medium\">Pending</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3042, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hanym/Desktop/packet-tracer-emulator/frontend/src/components/network/PacketAnimation.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useNetworkStore } from '@/store/networkStore';\nimport { PacketFlow } from '@/types';\n\ninterface AnimatedPacket extends PacketFlow {\n  currentPosition: { x: number; y: number };\n  progress: number;\n  pathCoordinates: { x: number; y: number }[];\n}\n\nconst packetColors = {\n  ICMP: '#3b82f6',\n  TCP: '#10b981',\n  UDP: '#8b5cf6',\n  ARP: '#f59e0b',\n  DNS: '#ef4444',\n};\n\nexport const PacketAnimation: React.FC = () => {\n  const { packets, devices, connections, isRunning, updatePacket } = useNetworkStore();\n  const [animatedPackets, setAnimatedPackets] = useState<AnimatedPacket[]>([]);\n\n  useEffect(() => {\n    if (!isRunning) {\n      setAnimatedPackets([]);\n      return;\n    }\n\n    const newAnimatedPackets = packets\n      .filter(packet => packet.status === 'transmitted')\n      .map(packet => {\n        const pathCoordinates = calculatePacketPath(packet, devices, connections);\n        return {\n          ...packet,\n          currentPosition: pathCoordinates[0] || { x: 0, y: 0 },\n          progress: 0,\n          pathCoordinates,\n        };\n      });\n\n    setAnimatedPackets(newAnimatedPackets);\n  }, [packets, devices, connections, isRunning]);\n\n  return (\n    <div className=\"absolute inset-0 pointer-events-none z-10\">\n      <AnimatePresence>\n        {animatedPackets.map((packet) => (\n          <PacketElement \n            key={packet.id} \n            packet={packet} \n            onComplete={() => {\n              // Update packet status to received when animation completes\n              updatePacket(packet.id, { status: 'received' });\n            }}\n          />\n        ))}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nconst PacketElement: React.FC<{ \n  packet: AnimatedPacket; \n  onComplete: () => void;\n}> = ({ packet, onComplete }) => {\n  const animationDuration = 2; // seconds per hop\n  const totalDuration = Math.max(packet.pathCoordinates.length * animationDuration, 2);\n\n  return (\n    <motion.div\n      className=\"absolute\"\n      initial={{\n        x: packet.pathCoordinates[0]?.x || 0,\n        y: packet.pathCoordinates[0]?.y || 0,\n        scale: 0,\n        opacity: 0,\n      }}\n      animate={{\n        x: packet.pathCoordinates.map(coord => coord.x),\n        y: packet.pathCoordinates.map(coord => coord.y),\n        scale: [0, 1.2, 1, 1, 0.8, 1],\n        opacity: [0, 1, 1, 1, 1, 1],\n      }}\n      transition={{\n        duration: totalDuration,\n        times: packet.pathCoordinates.length > 1 \n          ? packet.pathCoordinates.map((_, i) => i / (packet.pathCoordinates.length - 1))\n          : [0, 1],\n        ease: \"easeInOut\",\n      }}\n      exit={{\n        scale: 0,\n        opacity: 0,\n        transition: { duration: 0.3 }\n      }}\n      onAnimationComplete={() => {\n        // Call onComplete when animation finishes\n        setTimeout(onComplete, 500); // Small delay before marking as received\n      }}\n      style={{\n        backgroundColor: packetColors[packet.protocol],\n        zIndex: 1000,\n      }}\n      className=\"w-8 h-8 rounded-full border-2 border-white shadow-lg flex items-center justify-center text-xs\"\n    >\n      <span className=\"text-white font-bold text-xs\">\n        {packet.protocol.substring(0, 2)}\n      </span>\n      \n      {/* Packet trail effect */}\n      <motion.div\n        className=\"absolute inset-0 rounded-full\"\n        style={{\n          backgroundColor: packetColors[packet.protocol],\n        }}\n        animate={{\n          scale: [1, 2, 3],\n          opacity: [0.8, 0.4, 0],\n        }}\n        transition={{\n          duration: 1,\n          repeat: Infinity,\n          ease: \"easeOut\",\n        }}\n      />\n    </motion.div>\n  );\n};\n\nfunction calculatePacketPath(\n  packet: PacketFlow,\n  devices: any[],\n  connections: any[]\n): { x: number; y: number }[] {\n  const sourceDevice = devices.find(d => d.id === packet.source);\n  const destinationDevice = devices.find(d => d.id === packet.destination);\n\n  if (!sourceDevice || !destinationDevice) {\n    return [];\n  }\n\n  const path = findShortestPath(packet.source, packet.destination, devices, connections);\n  \n  return path.map(deviceId => {\n    const device = devices.find(d => d.id === deviceId);\n    return device ? { \n      x: device.position.x + 60,\n      y: device.position.y + 60 \n    } : { x: 0, y: 0 };\n  });\n}\n\nfunction findShortestPath(\n  sourceId: string,\n  destinationId: string,\n  devices: any[],\n  connections: any[]\n): string[] {\n  if (sourceId === destinationId) return [sourceId];\n\n  const graph: Record<string, string[]> = {};\n  devices.forEach(device => {\n    graph[device.id] = [];\n  });\n\n  connections.forEach(conn => {\n    if (conn.status === 'connected') {\n      graph[conn.source].push(conn.target);\n      graph[conn.target].push(conn.source);\n    }\n  });\n\n  const queue = [[sourceId]];\n  const visited = new Set([sourceId]);\n\n  while (queue.length > 0) {\n    const path = queue.shift()!;\n    const current = path[path.length - 1];\n\n    if (current === destinationId) {\n      return path;\n    }\n\n    for (const neighbor of graph[current] || []) {\n      if (!visited.has(neighbor)) {\n        visited.add(neighbor);\n        queue.push([...path, neighbor]);\n      }\n    }\n  }\n\n  return [sourceId, destinationId];\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3279, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hanym/Desktop/packet-tracer-emulator/frontend/src/components/ui/Modal.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { FiX } from 'react-icons/fi';\n\ninterface ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  title: string;\n  children: React.ReactNode;\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n}\n\nexport const Modal: React.FC<ModalProps> = ({\n  isOpen,\n  onClose,\n  title,\n  children,\n  size = 'md',\n}) => {\n  const sizeClasses = {\n    sm: 'max-w-md',\n    md: 'max-w-2xl',\n    lg: 'max-w-4xl',\n    xl: 'max-w-6xl',\n  };\n\n  React.useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') onClose();\n    };\n\n    if (isOpen) {\n      document.addEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'hidden';\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'unset';\n    };\n  }, [isOpen, onClose]);\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center\">\n          {/* Backdrop */}\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"absolute inset-0 bg-black bg-opacity-50\"\n            onClick={onClose}\n          />\n\n          {/* Modal */}\n          <motion.div\n            initial={{ opacity: 0, scale: 0.9, y: 20 }}\n            animate={{ opacity: 1, scale: 1, y: 0 }}\n            exit={{ opacity: 0, scale: 0.9, y: 20 }}\n            className={`relative bg-white rounded-lg shadow-xl ${sizeClasses[size]} w-full mx-4 max-h-[90vh] flex flex-col`}\n          >\n            {/* Header */}\n            <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\n              <h2 className=\"text-xl font-semibold text-gray-900\">{title}</h2>\n              <button\n                onClick={onClose}\n                className=\"p-1 text-gray-400 hover:text-gray-600 transition-colors\"\n              >\n                <FiX className=\"w-5 h-5\" />\n              </button>\n            </div>\n\n            {/* Content */}\n            <div className=\"flex-1 overflow-y-auto\">\n              {children}\n            </div>\n          </motion.div>\n        </div>\n      )}\n    </AnimatePresence>\n  );\n};\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AACA;AAJA;;;;;AAcO,MAAM,QAA8B,CAAC,EAC1C,MAAM,EACN,OAAO,EACP,KAAK,EACL,QAAQ,EACR,OAAO,IAAI,EACZ;IACC,MAAM,cAAc;QAClB,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IAEA,qMAAA,CAAA,UAAK,CAAC,SAAS,CAAC;QACd,MAAM,eAAe,CAAC;YACpB,IAAI,EAAE,GAAG,KAAK,UAAU;QAC1B;QAEA,IAAI,QAAQ;YACV,SAAS,gBAAgB,CAAC,WAAW;YACrC,SAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG;QACjC;QAEA,OAAO;YACL,SAAS,mBAAmB,CAAC,WAAW;YACxC,SAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG;QACjC;IACF,GAAG;QAAC;QAAQ;KAAQ;IAEpB,qBACE,8OAAC,yLAAA,CAAA,kBAAe;kBACb,wBACC,8OAAC;YAAI,WAAU;;8BAEb,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;oBACT,SAAS;wBAAE,SAAS;oBAAE;oBACtB,SAAS;wBAAE,SAAS;oBAAE;oBACtB,MAAM;wBAAE,SAAS;oBAAE;oBACnB,WAAU;oBACV,SAAS;;;;;;8BAIX,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;oBACT,SAAS;wBAAE,SAAS;wBAAG,OAAO;wBAAK,GAAG;oBAAG;oBACzC,SAAS;wBAAE,SAAS;wBAAG,OAAO;wBAAG,GAAG;oBAAE;oBACtC,MAAM;wBAAE,SAAS;wBAAG,OAAO;wBAAK,GAAG;oBAAG;oBACtC,WAAW,CAAC,uCAAuC,EAAE,WAAW,CAAC,KAAK,CAAC,uCAAuC,CAAC;;sCAG/G,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAAuC;;;;;;8CACrD,8OAAC;oCACC,SAAS;oCACT,WAAU;8CAEV,cAAA,8OAAC,8IAAA,CAAA,MAAG;wCAAC,WAAU;;;;;;;;;;;;;;;;;sCAKnB,8OAAC;4BAAI,WAAU;sCACZ;;;;;;;;;;;;;;;;;;;;;;;AAOf","debugId":null}},
    {"offset": {"line": 3416, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hanym/Desktop/packet-tracer-emulator/frontend/src/components/network/config/RouterConfig.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { FormInput, FormSelect } from '@/components/ui/FormInput';\nimport { Button } from '@/components/ui/Button';\nimport { NetworkDevice, InterfaceConfig, RouteEntry } from '@/types';\nimport { FiPlus, FiTrash2, FiToggleLeft, FiToggleRight } from 'react-icons/fi';\n\ninterface RouterConfigProps {\n  device: NetworkDevice;\n  activeTab: string;\n  onUpdate: (deviceId: string, updates: Partial<NetworkDevice>) => void;\n  onHasChanges: (hasChanges: boolean) => void;\n}\n\nexport const RouterConfig: React.FC<RouterConfigProps> = ({\n  device,\n  activeTab,\n  onUpdate,\n  onHasChanges,\n}) => {\n  const [config, setConfig] = useState(device.config || {});\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  useEffect(() => {\n    setConfig(device.config || {});\n  }, [device.config]);\n\n  const handleConfigChange = (field: string, value: any) => {\n    const newConfig = { ...config, [field]: value };\n    setConfig(newConfig);\n    onUpdate(device.id, { config: newConfig });\n    onHasChanges(true);\n    \n    // Clear related errors\n    if (errors[field]) {\n      setErrors({ ...errors, [field]: '' });\n    }\n  };\n\n  const validateIP = (ip: string): boolean => {\n    const ipRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return ipRegex.test(ip);\n  };\n\n  const renderBasicSettings = () => (\n    <div className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Basic Router Settings</h3>\n        <div className=\"grid grid-cols-1 gap-4\">\n          <FormInput\n            label=\"Hostname\"\n            value={config.hostname || ''}\n            onChange={(e) => handleConfigChange('hostname', e.target.value)}\n            placeholder=\"Router-1\"\n            hint=\"The router's hostname for identification\"\n          />\n          \n          <FormInput\n            label=\"Enable Password\"\n            type=\"password\"\n            value={config.enablePassword || ''}\n            onChange={(e) => handleConfigChange('enablePassword', e.target.value)}\n            placeholder=\"Enter enable password\"\n            hint=\"Password for privileged EXEC mode\"\n          />\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <FormSelect\n              label=\"Router Type\"\n              value={config.routerType || 'generic'}\n              onChange={(e) => handleConfigChange('routerType', e.target.value)}\n              options={[\n                { value: 'generic', label: 'Generic Router' },\n                { value: 'edge', label: 'Edge Router' },\n                { value: 'core', label: 'Core Router' },\n                { value: 'border', label: 'Border Router' },\n              ]}\n            />\n\n            <FormSelect\n              label=\"Routing Protocol\"\n              value={config.routingProtocol || 'static'}\n              onChange={(e) => handleConfigChange('routingProtocol', e.target.value)}\n              options={[\n                { value: 'static', label: 'Static Routing' },\n                { value: 'rip', label: 'RIP' },\n                { value: 'ospf', label: 'OSPF' },\n                { value: 'eigrp', label: 'EIGRP' },\n              ]}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderInterfaces = () => (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-lg font-medium text-gray-900\">Interface Configuration</h3>\n        <Button\n          size=\"sm\"\n          onClick={() => {\n            const newInterface = {\n              id: `eth${device.interfaces.length}`,\n              name: `GigabitEthernet0/${device.interfaces.length}`,\n              status: 'down' as const,\n            };\n            onUpdate(device.id, {\n              interfaces: [...device.interfaces, newInterface]\n            });\n            onHasChanges(true);\n          }}\n        >\n          <FiPlus className=\"w-4 h-4 mr-2\" />\n          Add Interface\n        </Button>\n      </div>\n\n      <div className=\"space-y-4\">\n        {device.interfaces.map((interface_, index) => (\n          <div key={interface_.id} className=\"border border-gray-200 rounded-lg p-4\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"flex items-center space-x-3\">\n                <h4 className=\"font-medium text-gray-900\">{interface_.name}</h4>\n                <button\n                  onClick={() => {\n                    const newInterfaces = device.interfaces.map(iface =>\n                      iface.id === interface_.id\n                        ? { ...iface, status: iface.status === 'up' ? 'down' : 'up' }\n                        : iface\n                    );\n                    onUpdate(device.id, { interfaces: newInterfaces });\n                    onHasChanges(true);\n                  }}\n                  className={`flex items-center space-x-1 px-2 py-1 rounded text-xs ${\n                    interface_.status === 'up'\n                      ? 'bg-green-100 text-green-700'\n                      : 'bg-gray-100 text-gray-600'\n                  }`}\n                >\n                  {interface_.status === 'up' ? (\n                    <FiToggleRight className=\"w-4 h-4\" />\n                  ) : (\n                    <FiToggleLeft className=\"w-4 h-4\" />\n                  )}\n                  <span>{interface_.status}</span>\n                </button>\n              </div>\n              \n              <Button\n                variant=\"danger\"\n                size=\"sm\"\n                onClick={() => {\n                  const newInterfaces = device.interfaces.filter(iface => iface.id !== interface_.id);\n                  onUpdate(device.id, { interfaces: newInterfaces });\n                  onHasChanges(true);\n                }}\n              >\n                <FiTrash2 className=\"w-4 h-4\" />\n              </Button>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <FormInput\n                label=\"IP Address\"\n                value={interface_.ipAddress || ''}\n                onChange={(e) => {\n                  const newInterfaces = device.interfaces.map(iface =>\n                    iface.id === interface_.id\n                      ? { ...iface, ipAddress: e.target.value }\n                      : iface\n                  );\n                  onUpdate(device.id, { interfaces: newInterfaces });\n                  onHasChanges(true);\n                }}\n                placeholder=\"192.168.1.1\"\n                error={errors[`${interface_.id}-ip`]}\n              />\n              \n              <FormInput\n                label=\"Subnet Mask\"\n                value={interface_.subnetMask || ''}\n                onChange={(e) => {\n                  const newInterfaces = device.interfaces.map(iface =>\n                    iface.id === interface_.id\n                      ? { ...iface, subnetMask: e.target.value }\n                      : iface\n                  );\n                  onUpdate(device.id, { interfaces: newInterfaces });\n                  onHasChanges(true);\n                }}\n                placeholder=\"255.255.255.0\"\n                error={errors[`${interface_.id}-mask`]}\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  const renderRouting = () => (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-lg font-medium text-gray-900\">Routing Table</h3>\n        <Button\n          size=\"sm\"\n          onClick={() => {\n            const newRoute: RouteEntry = {\n              destination: '',\n              netmask: '',\n              gateway: '',\n              interface: device.interfaces[0]?.name || '',\n            };\n            const currentRoutes = config.routingTable || [];\n            handleConfigChange('routingTable', [...currentRoutes, newRoute]);\n          }}\n        >\n          <FiPlus className=\"w-4 h-4 mr-2\" />\n          Add Route\n        </Button>\n      </div>\n\n      <div className=\"space-y-4\">\n        {(config.routingTable || []).map((route: RouteEntry, index: number) => (\n          <div key={index} className=\"border border-gray-200 rounded-lg p-4\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h4 className=\"font-medium text-gray-900\">Route {index + 1}</h4>\n              <Button\n                variant=\"danger\"\n                size=\"sm\"\n                onClick={() => {\n                  const newRoutes = (config.routingTable || []).filter((_: any, i: number) => i !== index);\n                  handleConfigChange('routingTable', newRoutes);\n                }}\n              >\n                <FiTrash2 className=\"w-4 h-4\" />\n              </Button>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <FormInput\n                label=\"Destination Network\"\n                value={route.destination}\n                onChange={(e) => {\n                  const newRoutes = [...(config.routingTable || [])];\n                  newRoutes[index] = { ...route, destination: e.target.value };\n                  handleConfigChange('routingTable', newRoutes);\n                }}\n                placeholder=\"192.168.1.0\"\n              />\n              \n              <FormInput\n                label=\"Netmask\"\n                value={route.netmask}\n                onChange={(e) => {\n                  const newRoutes = [...(config.routingTable || [])];\n                  newRoutes[index] = { ...route, netmask: e.target.value };\n                  handleConfigChange('routingTable', newRoutes);\n                }}\n                placeholder=\"255.255.255.0\"\n              />\n              \n              <FormInput\n                label=\"Gateway\"\n                value={route.gateway}\n                onChange={(e) => {\n                  const newRoutes = [...(config.routingTable || [])];\n                  newRoutes[index] = { ...route, gateway: e.target.value };\n                  handleConfigChange('routingTable', newRoutes);\n                }}\n                placeholder=\"192.168.1.1\"\n              />\n              \n              <FormSelect\n                label=\"Interface\"\n                value={route.interface}\n                onChange={(e) => {\n                  const newRoutes = [...(config.routingTable || [])];\n                  newRoutes[index] = { ...route, interface: e.target.value };\n                  handleConfigChange('routingTable', newRoutes);\n                }}\n                options={device.interfaces.map(iface => ({\n                  value: iface.name,\n                  label: iface.name,\n                }))}\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  const renderAdvanced = () => (\n    <div className=\"space-y-6\">\n      <h3 className=\"text-lg font-medium text-gray-900\">Advanced Settings</h3>\n      <div className=\"grid grid-cols-1 gap-4\">\n        <FormInput\n          label=\"SNMP Community String\"\n          value={config.snmpCommunity || ''}\n          onChange={(e) => handleConfigChange('snmpCommunity', e.target.value)}\n          placeholder=\"public\"\n          hint=\"SNMP read community string\"\n        />\n        \n        <FormInput\n          label=\"NTP Server\"\n          value={config.ntpServer || ''}\n          onChange={(e) => handleConfigChange('ntpServer', e.target.value)}\n          placeholder=\"pool.ntp.org\"\n          hint=\"Network Time Protocol server\"\n        />\n\n        <FormSelect\n          label=\"Log Level\"\n          value={config.logLevel || 'informational'}\n          onChange={(e) => handleConfigChange('logLevel', e.target.value)}\n          options={[\n            { value: 'emergencies', label: 'Emergencies' },\n            { value: 'alerts', label: 'Alerts' },\n            { value: 'critical', label: 'Critical' },\n            { value: 'errors', label: 'Errors' },\n            { value: 'warnings', label: 'Warnings' },\n            { value: 'notifications', label: 'Notifications' },\n            { value: 'informational', label: 'Informational' },\n            { value: 'debugging', label: 'Debugging' },\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  switch (activeTab) {\n    case 'basic':\n      return renderBasicSettings();\n    case 'interfaces':\n      return renderInterfaces();\n    case 'routing':\n      return renderRouting();\n    case 'advanced':\n      return renderAdvanced();\n    default:\n      return null;\n  }\n};\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAeO,MAAM,eAA4C,CAAC,EACxD,MAAM,EACN,SAAS,EACT,QAAQ,EACR,YAAY,EACb;IACC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,MAAM,IAAI,CAAC;IACvD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA0B,CAAC;IAE9D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,UAAU,OAAO,MAAM,IAAI,CAAC;IAC9B,GAAG;QAAC,OAAO,MAAM;KAAC;IAElB,MAAM,qBAAqB,CAAC,OAAe;QACzC,MAAM,YAAY;YAAE,GAAG,MAAM;YAAE,CAAC,MAAM,EAAE;QAAM;QAC9C,UAAU;QACV,SAAS,OAAO,EAAE,EAAE;YAAE,QAAQ;QAAU;QACxC,aAAa;QAEb,uBAAuB;QACvB,IAAI,MAAM,CAAC,MAAM,EAAE;YACjB,UAAU;gBAAE,GAAG,MAAM;gBAAE,CAAC,MAAM,EAAE;YAAG;QACrC;IACF;IAEA,MAAM,aAAa,CAAC;QAClB,MAAM,UAAU;QAChB,OAAO,QAAQ,IAAI,CAAC;IACtB;IAEA,MAAM,sBAAsB,kBAC1B,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;;kCACC,8OAAC;wBAAG,WAAU;kCAAyC;;;;;;kCACvD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,qIAAA,CAAA,YAAS;gCACR,OAAM;gCACN,OAAO,OAAO,QAAQ,IAAI;gCAC1B,UAAU,CAAC,IAAM,mBAAmB,YAAY,EAAE,MAAM,CAAC,KAAK;gCAC9D,aAAY;gCACZ,MAAK;;;;;;0CAGP,8OAAC,qIAAA,CAAA,YAAS;gCACR,OAAM;gCACN,MAAK;gCACL,OAAO,OAAO,cAAc,IAAI;gCAChC,UAAU,CAAC,IAAM,mBAAmB,kBAAkB,EAAE,MAAM,CAAC,KAAK;gCACpE,aAAY;gCACZ,MAAK;;;;;;0CAGP,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,qIAAA,CAAA,aAAU;wCACT,OAAM;wCACN,OAAO,OAAO,UAAU,IAAI;wCAC5B,UAAU,CAAC,IAAM,mBAAmB,cAAc,EAAE,MAAM,CAAC,KAAK;wCAChE,SAAS;4CACP;gDAAE,OAAO;gDAAW,OAAO;4CAAiB;4CAC5C;gDAAE,OAAO;gDAAQ,OAAO;4CAAc;4CACtC;gDAAE,OAAO;gDAAQ,OAAO;4CAAc;4CACtC;gDAAE,OAAO;gDAAU,OAAO;4CAAgB;yCAC3C;;;;;;kDAGH,8OAAC,qIAAA,CAAA,aAAU;wCACT,OAAM;wCACN,OAAO,OAAO,eAAe,IAAI;wCACjC,UAAU,CAAC,IAAM,mBAAmB,mBAAmB,EAAE,MAAM,CAAC,KAAK;wCACrE,SAAS;4CACP;gDAAE,OAAO;gDAAU,OAAO;4CAAiB;4CAC3C;gDAAE,OAAO;gDAAO,OAAO;4CAAM;4CAC7B;gDAAE,OAAO;gDAAQ,OAAO;4CAAO;4CAC/B;gDAAE,OAAO;gDAAS,OAAO;4CAAQ;yCAClC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAQb,MAAM,mBAAmB,kBACvB,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAoC;;;;;;sCAClD,8OAAC,kIAAA,CAAA,SAAM;4BACL,MAAK;4BACL,SAAS;gCACP,MAAM,eAAe;oCACnB,IAAI,CAAC,GAAG,EAAE,OAAO,UAAU,CAAC,MAAM,EAAE;oCACpC,MAAM,CAAC,iBAAiB,EAAE,OAAO,UAAU,CAAC,MAAM,EAAE;oCACpD,QAAQ;gCACV;gCACA,SAAS,OAAO,EAAE,EAAE;oCAClB,YAAY;2CAAI,OAAO,UAAU;wCAAE;qCAAa;gCAClD;gCACA,aAAa;4BACf;;8CAEA,8OAAC,8IAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;;;;;;;8BAKvC,8OAAC;oBAAI,WAAU;8BACZ,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC,YAAY,sBAClC,8OAAC;4BAAwB,WAAU;;8CACjC,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAG,WAAU;8DAA6B,WAAW,IAAI;;;;;;8DAC1D,8OAAC;oDACC,SAAS;wDACP,MAAM,gBAAgB,OAAO,UAAU,CAAC,GAAG,CAAC,CAAA,QAC1C,MAAM,EAAE,KAAK,WAAW,EAAE,GACtB;gEAAE,GAAG,KAAK;gEAAE,QAAQ,MAAM,MAAM,KAAK,OAAO,SAAS;4DAAK,IAC1D;wDAEN,SAAS,OAAO,EAAE,EAAE;4DAAE,YAAY;wDAAc;wDAChD,aAAa;oDACf;oDACA,WAAW,CAAC,sDAAsD,EAChE,WAAW,MAAM,KAAK,OAClB,gCACA,6BACJ;;wDAED,WAAW,MAAM,KAAK,qBACrB,8OAAC,8IAAA,CAAA,gBAAa;4DAAC,WAAU;;;;;qHAEzB,8OAAC,8IAAA,CAAA,eAAY;4DAAC,WAAU;;;;;;sEAE1B,8OAAC;sEAAM,WAAW,MAAM;;;;;;;;;;;;;;;;;;sDAI5B,8OAAC,kIAAA,CAAA,SAAM;4CACL,SAAQ;4CACR,MAAK;4CACL,SAAS;gDACP,MAAM,gBAAgB,OAAO,UAAU,CAAC,MAAM,CAAC,CAAA,QAAS,MAAM,EAAE,KAAK,WAAW,EAAE;gDAClF,SAAS,OAAO,EAAE,EAAE;oDAAE,YAAY;gDAAc;gDAChD,aAAa;4CACf;sDAEA,cAAA,8OAAC,8IAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;;;;;;;;;;;;8CAIxB,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,qIAAA,CAAA,YAAS;4CACR,OAAM;4CACN,OAAO,WAAW,SAAS,IAAI;4CAC/B,UAAU,CAAC;gDACT,MAAM,gBAAgB,OAAO,UAAU,CAAC,GAAG,CAAC,CAAA,QAC1C,MAAM,EAAE,KAAK,WAAW,EAAE,GACtB;wDAAE,GAAG,KAAK;wDAAE,WAAW,EAAE,MAAM,CAAC,KAAK;oDAAC,IACtC;gDAEN,SAAS,OAAO,EAAE,EAAE;oDAAE,YAAY;gDAAc;gDAChD,aAAa;4CACf;4CACA,aAAY;4CACZ,OAAO,MAAM,CAAC,GAAG,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC;;;;;;sDAGtC,8OAAC,qIAAA,CAAA,YAAS;4CACR,OAAM;4CACN,OAAO,WAAW,UAAU,IAAI;4CAChC,UAAU,CAAC;gDACT,MAAM,gBAAgB,OAAO,UAAU,CAAC,GAAG,CAAC,CAAA,QAC1C,MAAM,EAAE,KAAK,WAAW,EAAE,GACtB;wDAAE,GAAG,KAAK;wDAAE,YAAY,EAAE,MAAM,CAAC,KAAK;oDAAC,IACvC;gDAEN,SAAS,OAAO,EAAE,EAAE;oDAAE,YAAY;gDAAc;gDAChD,aAAa;4CACf;4CACA,aAAY;4CACZ,OAAO,MAAM,CAAC,GAAG,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC;;;;;;;;;;;;;2BAxElC,WAAW,EAAE;;;;;;;;;;;;;;;;IAiF/B,MAAM,gBAAgB,kBACpB,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAoC;;;;;;sCAClD,8OAAC,kIAAA,CAAA,SAAM;4BACL,MAAK;4BACL,SAAS;gCACP,MAAM,WAAuB;oCAC3B,aAAa;oCACb,SAAS;oCACT,SAAS;oCACT,WAAW,OAAO,UAAU,CAAC,EAAE,EAAE,QAAQ;gCAC3C;gCACA,MAAM,gBAAgB,OAAO,YAAY,IAAI,EAAE;gCAC/C,mBAAmB,gBAAgB;uCAAI;oCAAe;iCAAS;4BACjE;;8CAEA,8OAAC,8IAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;;;;;;;8BAKvC,8OAAC;oBAAI,WAAU;8BACZ,CAAC,OAAO,YAAY,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,OAAmB,sBACnD,8OAAC;4BAAgB,WAAU;;8CACzB,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;;gDAA4B;gDAAO,QAAQ;;;;;;;sDACzD,8OAAC,kIAAA,CAAA,SAAM;4CACL,SAAQ;4CACR,MAAK;4CACL,SAAS;gDACP,MAAM,YAAY,CAAC,OAAO,YAAY,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC,GAAQ,IAAc,MAAM;gDAClF,mBAAmB,gBAAgB;4CACrC;sDAEA,cAAA,8OAAC,8IAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;;;;;;;;;;;;8CAIxB,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,qIAAA,CAAA,YAAS;4CACR,OAAM;4CACN,OAAO,MAAM,WAAW;4CACxB,UAAU,CAAC;gDACT,MAAM,YAAY;uDAAK,OAAO,YAAY,IAAI,EAAE;iDAAE;gDAClD,SAAS,CAAC,MAAM,GAAG;oDAAE,GAAG,KAAK;oDAAE,aAAa,EAAE,MAAM,CAAC,KAAK;gDAAC;gDAC3D,mBAAmB,gBAAgB;4CACrC;4CACA,aAAY;;;;;;sDAGd,8OAAC,qIAAA,CAAA,YAAS;4CACR,OAAM;4CACN,OAAO,MAAM,OAAO;4CACpB,UAAU,CAAC;gDACT,MAAM,YAAY;uDAAK,OAAO,YAAY,IAAI,EAAE;iDAAE;gDAClD,SAAS,CAAC,MAAM,GAAG;oDAAE,GAAG,KAAK;oDAAE,SAAS,EAAE,MAAM,CAAC,KAAK;gDAAC;gDACvD,mBAAmB,gBAAgB;4CACrC;4CACA,aAAY;;;;;;sDAGd,8OAAC,qIAAA,CAAA,YAAS;4CACR,OAAM;4CACN,OAAO,MAAM,OAAO;4CACpB,UAAU,CAAC;gDACT,MAAM,YAAY;uDAAK,OAAO,YAAY,IAAI,EAAE;iDAAE;gDAClD,SAAS,CAAC,MAAM,GAAG;oDAAE,GAAG,KAAK;oDAAE,SAAS,EAAE,MAAM,CAAC,KAAK;gDAAC;gDACvD,mBAAmB,gBAAgB;4CACrC;4CACA,aAAY;;;;;;sDAGd,8OAAC,qIAAA,CAAA,aAAU;4CACT,OAAM;4CACN,OAAO,MAAM,SAAS;4CACtB,UAAU,CAAC;gDACT,MAAM,YAAY;uDAAK,OAAO,YAAY,IAAI,EAAE;iDAAE;gDAClD,SAAS,CAAC,MAAM,GAAG;oDAAE,GAAG,KAAK;oDAAE,WAAW,EAAE,MAAM,CAAC,KAAK;gDAAC;gDACzD,mBAAmB,gBAAgB;4CACrC;4CACA,SAAS,OAAO,UAAU,CAAC,GAAG,CAAC,CAAA,QAAS,CAAC;oDACvC,OAAO,MAAM,IAAI;oDACjB,OAAO,MAAM,IAAI;gDACnB,CAAC;;;;;;;;;;;;;2BA5DG;;;;;;;;;;;;;;;;IAqElB,MAAM,iBAAiB,kBACrB,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAoC;;;;;;8BAClD,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,qIAAA,CAAA,YAAS;4BACR,OAAM;4BACN,OAAO,OAAO,aAAa,IAAI;4BAC/B,UAAU,CAAC,IAAM,mBAAmB,iBAAiB,EAAE,MAAM,CAAC,KAAK;4BACnE,aAAY;4BACZ,MAAK;;;;;;sCAGP,8OAAC,qIAAA,CAAA,YAAS;4BACR,OAAM;4BACN,OAAO,OAAO,SAAS,IAAI;4BAC3B,UAAU,CAAC,IAAM,mBAAmB,aAAa,EAAE,MAAM,CAAC,KAAK;4BAC/D,aAAY;4BACZ,MAAK;;;;;;sCAGP,8OAAC,qIAAA,CAAA,aAAU;4BACT,OAAM;4BACN,OAAO,OAAO,QAAQ,IAAI;4BAC1B,UAAU,CAAC,IAAM,mBAAmB,YAAY,EAAE,MAAM,CAAC,KAAK;4BAC9D,SAAS;gCACP;oCAAE,OAAO;oCAAe,OAAO;gCAAc;gCAC7C;oCAAE,OAAO;oCAAU,OAAO;gCAAS;gCACnC;oCAAE,OAAO;oCAAY,OAAO;gCAAW;gCACvC;oCAAE,OAAO;oCAAU,OAAO;gCAAS;gCACnC;oCAAE,OAAO;oCAAY,OAAO;gCAAW;gCACvC;oCAAE,OAAO;oCAAiB,OAAO;gCAAgB;gCACjD;oCAAE,OAAO;oCAAiB,OAAO;gCAAgB;gCACjD;oCAAE,OAAO;oCAAa,OAAO;gCAAY;6BAC1C;;;;;;;;;;;;;;;;;;IAMT,OAAQ;QACN,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF","debugId":null}},
    {"offset": {"line": 4094, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hanym/Desktop/packet-tracer-emulator/frontend/src/components/network/config/SwitchConfig.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { FormInput, FormSelect } from '@/components/ui/FormInput';\nimport { Button } from '@/components/ui/Button';\nimport { NetworkDevice } from '@/types';\nimport { FiPlus, FiTrash2, FiToggleLeft, FiToggleRight } from 'react-icons/fi';\n\ninterface SwitchConfigProps {\n  device: NetworkDevice;\n  activeTab: string;\n  onUpdate: (deviceId: string, updates: Partial<NetworkDevice>) => void;\n  onHasChanges: (hasChanges: boolean) => void;\n}\n\nexport const SwitchConfig: React.FC<SwitchConfigProps> = ({\n  device,\n  activeTab,\n  onUpdate,\n  onHasChanges,\n}) => {\n  const [config, setConfig] = useState(device.config || {});\n\n  useEffect(() => {\n    setConfig(device.config || {});\n  }, [device.config]);\n\n  const handleConfigChange = (field: string, value: any) => {\n    const newConfig = { ...config, [field]: value };\n    setConfig(newConfig);\n    onUpdate(device.id, { config: newConfig });\n    onHasChanges(true);\n  };\n\n  const renderBasicSettings = () => (\n    <div className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Basic Switch Settings</h3>\n        <div className=\"grid grid-cols-1 gap-4\">\n          <FormInput\n            label=\"Hostname\"\n            value={config.hostname || ''}\n            onChange={(e) => handleConfigChange('hostname', e.target.value)}\n            placeholder=\"Switch-1\"\n            hint=\"The switch's hostname for identification\"\n          />\n          \n          <FormInput\n            label=\"Management IP Address\"\n            value={config.managementIP || ''}\n            onChange={(e) => handleConfigChange('managementIP', e.target.value)}\n            placeholder=\"192.168.1.10\"\n            hint=\"IP address for switch management\"\n          />\n\n          <FormInput\n            label=\"Management Subnet Mask\"\n            value={config.managementMask || ''}\n            onChange={(e) => handleConfigChange('managementMask', e.target.value)}\n            placeholder=\"255.255.255.0\"\n            hint=\"Subnet mask for management network\"\n          />\n\n          <FormInput\n            label=\"Default Gateway\"\n            value={config.defaultGateway || ''}\n            onChange={(e) => handleConfigChange('defaultGateway', e.target.value)}\n            placeholder=\"192.168.1.1\"\n            hint=\"Default gateway for management traffic\"\n          />\n\n          <FormSelect\n            label=\"Switch Type\"\n            value={config.switchType || 'access'}\n            onChange={(e) => handleConfigChange('switchType', e.target.value)}\n            options={[\n              { value: 'access', label: 'Access Switch' },\n              { value: 'distribution', label: 'Distribution Switch' },\n              { value: 'core', label: 'Core Switch' },\n            ]}\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderInterfaces = () => (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-lg font-medium text-gray-900\">Port Configuration</h3>\n        <div className=\"text-sm text-gray-500\">\n          {device.interfaces.filter(i => i.status === 'up').length} of {device.interfaces.length} ports active\n        </div>\n      </div>\n\n      <div className=\"space-y-4\">\n        {device.interfaces.map((interface_, index) => (\n          <div key={interface_.id} className=\"border border-gray-200 rounded-lg p-4\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"flex items-center space-x-3\">\n                <h4 className=\"font-medium text-gray-900\">{interface_.name}</h4>\n                <button\n                  onClick={() => {\n                    const newInterfaces = device.interfaces.map(iface =>\n                      iface.id === interface_.id\n                        ? { ...iface, status: iface.status === 'up' ? 'down' : 'up' }\n                        : iface\n                    );\n                    onUpdate(device.id, { interfaces: newInterfaces });\n                    onHasChanges(true);\n                  }}\n                  className={`flex items-center space-x-1 px-2 py-1 rounded text-xs ${\n                    interface_.status === 'up'\n                      ? 'bg-green-100 text-green-700'\n                      : 'bg-gray-100 text-gray-600'\n                  }`}\n                >\n                  {interface_.status === 'up' ? (\n                    <FiToggleRight className=\"w-4 h-4\" />\n                  ) : (\n                    <FiToggleLeft className=\"w-4 h-4\" />\n                  )}\n                  <span>{interface_.status}</span>\n                </button>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-3 gap-4\">\n              <FormSelect\n                label=\"Port Mode\"\n                value={interface_.mode || 'access'}\n                onChange={(e) => {\n                  const newInterfaces = device.interfaces.map(iface =>\n                    iface.id === interface_.id\n                      ? { ...iface, mode: e.target.value }\n                      : iface\n                  );\n                  onUpdate(device.id, { interfaces: newInterfaces });\n                  onHasChanges(true);\n                }}\n                options={[\n                  { value: 'access', label: 'Access' },\n                  { value: 'trunk', label: 'Trunk' },\n                ]}\n              />\n              \n              <FormInput\n                label=\"Access VLAN\"\n                value={interface_.accessVlan || '1'}\n                onChange={(e) => {\n                  const newInterfaces = device.interfaces.map(iface =>\n                    iface.id === interface_.id\n                      ? { ...iface, accessVlan: e.target.value }\n                      : iface\n                  );\n                  onUpdate(device.id, { interfaces: newInterfaces });\n                  onHasChanges(true);\n                }}\n                placeholder=\"1\"\n                disabled={interface_.mode === 'trunk'}\n              />\n              \n              <FormSelect\n                label=\"Speed/Duplex\"\n                value={interface_.speedDuplex || 'auto'}\n                onChange={(e) => {\n                  const newInterfaces = device.interfaces.map(iface =>\n                    iface.id === interface_.id\n                      ? { ...iface, speedDuplex: e.target.value }\n                      : iface\n                  );\n                  onUpdate(device.id, { interfaces: newInterfaces });\n                  onHasChanges(true);\n                }}\n                options={[\n                  { value: 'auto', label: 'Auto' },\n                  { value: '10-half', label: '10 Mbps Half' },\n                  { value: '10-full', label: '10 Mbps Full' },\n                  { value: '100-half', label: '100 Mbps Half' },\n                  { value: '100-full', label: '100 Mbps Full' },\n                  { value: '1000-full', label: '1 Gbps Full' },\n                ]}\n              />\n            </div>\n\n            {interface_.mode === 'trunk' && (\n              <div className=\"mt-4\">\n                <FormInput\n                  label=\"Allowed VLANs\"\n                  value={interface_.allowedVlans || '1-4094'}\n                  onChange={(e) => {\n                    const newInterfaces = device.interfaces.map(iface =>\n                      iface.id === interface_.id\n                        ? { ...iface, allowedVlans: e.target.value }\n                        : iface\n                    );\n                    onUpdate(device.id, { interfaces: newInterfaces });\n                    onHasChanges(true);\n                  }}\n                  placeholder=\"1-4094\"\n                  hint=\"Comma-separated VLAN list (e.g., 1,10,20-30)\"\n                />\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  const renderAdvanced = () => (\n    <div className=\"space-y-6\">\n      <h3 className=\"text-lg font-medium text-gray-900\">VLAN Configuration</h3>\n      \n      <div className=\"space-y-4\">\n        <div className=\"flex items-center justify-between\">\n          <h4 className=\"font-medium text-gray-900\">VLANs</h4>\n          <Button\n            size=\"sm\"\n            onClick={() => {\n              const vlans = config.vlans || [];\n              const newVlan = {\n                id: vlans.length + 1,\n                name: `VLAN${vlans.length + 1}`,\n                description: '',\n              };\n              handleConfigChange('vlans', [...vlans, newVlan]);\n            }}\n          >\n            <FiPlus className=\"w-4 h-4 mr-2\" />\n            Add VLAN\n          </Button>\n        </div>\n\n        {(config.vlans || []).map((vlan: any, index: number) => (\n          <div key={index} className=\"border border-gray-200 rounded-lg p-4\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h5 className=\"font-medium text-gray-900\">VLAN {vlan.id}</h5>\n              <Button\n                variant=\"danger\"\n                size=\"sm\"\n                onClick={() => {\n                  const newVlans = (config.vlans || []).filter((_: any, i: number) => i !== index);\n                  handleConfigChange('vlans', newVlans);\n                }}\n              >\n                <FiTrash2 className=\"w-4 h-4\" />\n              </Button>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <FormInput\n                label=\"VLAN ID\"\n                type=\"number\"\n                value={vlan.id}\n                onChange={(e) => {\n                  const newVlans = [...(config.vlans || [])];\n                  newVlans[index] = { ...vlan, id: parseInt(e.target.value) };\n                  handleConfigChange('vlans', newVlans);\n                }}\n                min=\"1\"\n                max=\"4094\"\n              />\n              \n              <FormInput\n                label=\"VLAN Name\"\n                value={vlan.name}\n                onChange={(e) => {\n                  const newVlans = [...(config.vlans || [])];\n                  newVlans[index] = { ...vlan, name: e.target.value };\n                  handleConfigChange('vlans', newVlans);\n                }}\n                placeholder=\"Sales\"\n              />\n            </div>\n\n            <div className=\"mt-4\">\n              <FormInput\n                label=\"Description\"\n                value={vlan.description}\n                onChange={(e) => {\n                  const newVlans = [...(config.vlans || [])];\n                  newVlans[index] = { ...vlan, description: e.target.value };\n                  handleConfigChange('vlans', newVlans);\n                }}\n                placeholder=\"Sales department network\"\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  switch (activeTab) {\n    case 'basic':\n      return renderBasicSettings();\n    case 'interfaces':\n      return renderInterfaces();\n    case 'advanced':\n      return renderAdvanced();\n    default:\n      return null;\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4681, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hanym/Desktop/packet-tracer-emulator/frontend/src/components/network/config/PCConfig.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { FormInput, FormSelect } from '@/components/ui/FormInput';\nimport { NetworkDevice } from '@/types';\nimport { FiToggleLeft, FiToggleRight } from 'react-icons/fi';\n\ninterface PCConfigProps {\n  device: NetworkDevice;\n  activeTab: string;\n  onUpdate: (deviceId: string, updates: Partial<NetworkDevice>) => void;\n  onHasChanges: (hasChanges: boolean) => void;\n}\n\nexport const PCConfig: React.FC<PCConfigProps> = ({\n  device,\n  activeTab,\n  onUpdate,\n  onHasChanges,\n}) => {\n  const [config, setConfig] = useState(device.config || {});\n\n  useEffect(() => {\n    setConfig(device.config || {});\n  }, [device.config]);\n\n  const handleConfigChange = (field: string, value: any) => {\n    const newConfig = { ...config, [field]: value };\n    setConfig(newConfig);\n    onUpdate(device.id, { config: newConfig });\n    onHasChanges(true);\n  };\n\n  const renderBasicSettings = () => (\n    <div className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">PC Network Settings</h3>\n        <div className=\"grid grid-cols-1 gap-4\">\n          <FormInput\n            label=\"Computer Name\"\n            value={config.computerName || ''}\n            onChange={(e) => handleConfigChange('computerName', e.target.value)}\n            placeholder=\"PC-1\"\n            hint=\"The computer's name on the network\"\n          />\n          \n          <FormSelect\n            label=\"IP Configuration\"\n            value={config.ipConfig || 'dhcp'}\n            onChange={(e) => handleConfigChange('ipConfig', e.target.value)}\n            options={[\n              { value: 'dhcp', label: 'Obtain IP automatically (DHCP)' },\n              { value: 'static', label: 'Use static IP address' },\n            ]}\n          />\n\n          {config.ipConfig === 'static' && (\n            <>\n              <FormInput\n                label=\"IP Address\"\n                value={config.ipAddress || ''}\n                onChange={(e) => handleConfigChange('ipAddress', e.target.value)}\n                placeholder=\"192.168.1.100\"\n                hint=\"Static IP address for this PC\"\n              />\n              \n              <FormInput\n                label=\"Subnet Mask\"\n                value={config.subnetMask || ''}\n                onChange={(e) => handleConfigChange('subnetMask', e.target.value)}\n                placeholder=\"255.255.255.0\"\n                hint=\"Subnet mask for the network\"\n              />\n              \n              <FormInput\n                label=\"Default Gateway\"\n                value={config.defaultGateway || ''}\n                onChange={(e) => handleConfigChange('defaultGateway', e.target.value)}\n                placeholder=\"192.168.1.1\"\n                hint=\"Default gateway (router) IP address\"\n              />\n            </>\n          )}\n\n          <FormInput\n            label=\"Primary DNS Server\"\n            value={config.primaryDNS || ''}\n            onChange={(e) => handleConfigChange('primaryDNS', e.target.value)}\n            placeholder=\"8.8.8.8\"\n            hint=\"Primary DNS server IP address\"\n          />\n          \n          <FormInput\n            label=\"Secondary DNS Server\"\n            value={config.secondaryDNS || ''}\n            onChange={(e) => handleConfigChange('secondaryDNS', e.target.value)}\n            placeholder=\"8.8.4.4\"\n            hint=\"Secondary DNS server IP address (optional)\"\n          />\n\n          <FormSelect\n            label=\"Operating System\"\n            value={config.operatingSystem || 'windows'}\n            onChange={(e) => handleConfigChange('operatingSystem', e.target.value)}\n            options={[\n              { value: 'windows', label: 'Windows' },\n              { value: 'macos', label: 'macOS' },\n              { value: 'linux', label: 'Linux' },\n              { value: 'other', label: 'Other' },\n            ]}\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderInterfaces = () => (\n    <div className=\"space-y-6\">\n      <h3 className=\"text-lg font-medium text-gray-900\">Network Interface</h3>\n      \n      {device.interfaces.map((interface_) => (\n        <div key={interface_.id} className=\"border border-gray-200 rounded-lg p-4\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h4 className=\"font-medium text-gray-900\">{interface_.name}</h4>\n            <button\n              onClick={() => {\n                const newInterfaces = device.interfaces.map(iface =>\n                  iface.id === interface_.id\n                    ? { ...iface, status: iface.status === 'up' ? 'down' : 'up' }\n                    : iface\n                );\n                onUpdate(device.id, { interfaces: newInterfaces });\n                onHasChanges(true);\n              }}\n              className={`flex items-center space-x-1 px-2 py-1 rounded text-xs ${\n                interface_.status === 'up'\n                  ? 'bg-green-100 text-green-700'\n                  : 'bg-gray-100 text-gray-600'\n              }`}\n            >\n              {interface_.status === 'up' ? (\n                <FiToggleRight className=\"w-4 h-4\" />\n              ) : (\n                <FiToggleLeft className=\"w-4 h-4\" />\n              )}\n              <span>{interface_.status === 'up' ? 'Enabled' : 'Disabled'}</span>\n            </button>\n          </div>\n\n          <div className=\"grid grid-cols-1 gap-4\">\n            <FormInput\n              label=\"MAC Address\"\n              value={interface_.macAddress || generateMACAddress()}\n              onChange={(e) => {\n                const newInterfaces = device.interfaces.map(iface =>\n                  iface.id === interface_.id\n                    ? { ...iface, macAddress: e.target.value }\n                    : iface\n                );\n                onUpdate(device.id, { interfaces: newInterfaces });\n                onHasChanges(true);\n              }}\n              placeholder=\"00:1A:2B:3C:4D:5E\"\n              hint=\"Physical MAC address of the network interface\"\n            />\n\n            <FormSelect\n              label=\"Speed\"\n              value={interface_.speed || 'auto'}\n              onChange={(e) => {\n                const newInterfaces = device.interfaces.map(iface =>\n                  iface.id === interface_.id\n                    ? { ...iface, speed: e.target.value }\n                    : iface\n                );\n                onUpdate(device.id, { interfaces: newInterfaces });\n                onHasChanges(true);\n              }}\n              options={[\n                { value: 'auto', label: 'Auto Negotiate' },\n                { value: '10', label: '10 Mbps' },\n                { value: '100', label: '100 Mbps' },\n                { value: '1000', label: '1 Gbps' },\n              ]}\n            />\n\n            <div className=\"bg-gray-50 p-3 rounded\">\n              <h5 className=\"font-medium text-gray-900 mb-2\">Interface Statistics</h5>\n              <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                <div>\n                  <span className=\"text-gray-600\">Packets Sent:</span>\n                  <span className=\"ml-2 font-mono\">{interface_.packetsSent || 0}</span>\n                </div>\n                <div>\n                  <span className=\"text-gray-600\">Packets Received:</span>\n                  <span className=\"ml-2 font-mono\">{interface_.packetsReceived || 0}</span>\n                </div>\n                <div>\n                  <span className=\"text-gray-600\">Bytes Sent:</span>\n                  <span className=\"ml-2 font-mono\">{interface_.bytesSent || 0}</span>\n                </div>\n                <div>\n                  <span className=\"text-gray-600\">Bytes Received:</span>\n                  <span className=\"ml-2 font-mono\">{interface_.bytesReceived || 0}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  switch (activeTab) {\n    case 'basic':\n      return renderBasicSettings();\n    case 'interfaces':\n      return renderInterfaces();\n    default:\n      return null;\n  }\n};\n\nfunction generateMACAddress(): string {\n  const chars = '0123456789ABCDEF';\n  let mac = '';\n  for (let i = 0; i < 12; i++) {\n    if (i > 0 && i % 2 === 0) mac += ':';\n    mac += chars[Math.floor(Math.random() * chars.length)];\n  }\n  return mac;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5150, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hanym/Desktop/packet-tracer-emulator/frontend/src/components/network/config/ServerConfig.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { FormInput, FormSelect } from '@/components/ui/FormInput';\nimport { Button } from '@/components/ui/Button';\nimport { NetworkDevice } from '@/types';\nimport { FiToggleLeft, FiToggleRight, FiPlus, FiTrash2 } from 'react-icons/fi';\n\ninterface ServerConfigProps {\n  device: NetworkDevice;\n  activeTab: string;\n  onUpdate: (deviceId: string, updates: Partial<NetworkDevice>) => void;\n  onHasChanges: (hasChanges: boolean) => void;\n}\n\nexport const ServerConfig: React.FC<ServerConfigProps> = ({\n  device,\n  activeTab,\n  onUpdate,\n  onHasChanges,\n}) => {\n  const [config, setConfig] = useState(device.config || {});\n\n  useEffect(() => {\n    setConfig(device.config || {});\n  }, [device.config]);\n\n  const handleConfigChange = (field: string, value: any) => {\n    const newConfig = { ...config, [field]: value };\n    setConfig(newConfig);\n    onUpdate(device.id, { config: newConfig });\n    onHasChanges(true);\n  };\n\n  const renderBasicSettings = () => (\n    <div className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Server Configuration</h3>\n        <div className=\"grid grid-cols-1 gap-4\">\n          <FormInput\n            label=\"Server Name\"\n            value={config.serverName || ''}\n            onChange={(e) => handleConfigChange('serverName', e.target.value)}\n            placeholder=\"WebServer-1\"\n            hint=\"The server's hostname\"\n          />\n          \n          <FormSelect\n            label=\"Server Type\"\n            value={config.serverType || 'web'}\n            onChange={(e) => handleConfigChange('serverType', e.target.value)}\n            options={[\n              { value: 'web', label: 'Web Server' },\n              { value: 'dns', label: 'DNS Server' },\n              { value: 'dhcp', label: 'DHCP Server' },\n              { value: 'ftp', label: 'FTP Server' },\n              { value: 'email', label: 'Email Server' },\n              { value: 'database', label: 'Database Server' },\n              { value: 'file', label: 'File Server' },\n            ]}\n          />\n\n          <FormInput\n            label=\"IP Address\"\n            value={config.ipAddress || ''}\n            onChange={(e) => handleConfigChange('ipAddress', e.target.value)}\n            placeholder=\"192.168.1.10\"\n            hint=\"Static IP address for the server\"\n          />\n          \n          <FormInput\n            label=\"Subnet Mask\"\n            value={config.subnetMask || ''}\n            onChange={(e) => handleConfigChange('subnetMask', e.target.value)}\n            placeholder=\"255.255.255.0\"\n            hint=\"Subnet mask for the network\"\n          />\n          \n          <FormInput\n            label=\"Default Gateway\"\n            value={config.defaultGateway || ''}\n            onChange={(e) => handleConfigChange('defaultGateway', e.target.value)}\n            placeholder=\"192.168.1.1\"\n            hint=\"Default gateway IP address\"\n          />\n\n          <FormSelect\n            label=\"Operating System\"\n            value={config.operatingSystem || 'linux'}\n            onChange={(e) => handleConfigChange('operatingSystem', e.target.value)}\n            options={[\n              { value: 'linux', label: 'Linux' },\n              { value: 'windows-server', label: 'Windows Server' },\n              { value: 'unix', label: 'Unix' },\n              { value: 'freebsd', label: 'FreeBSD' },\n            ]}\n          />\n        </div>\n      </div>\n\n      {/* Services Configuration */}\n      <div>\n        <div className=\"flex items-center justify-between mb-4\">\n          <h4 className=\"font-medium text-gray-900\">Services</h4>\n          <Button\n            size=\"sm\"\n            onClick={() => {\n              const services = config.services || [];\n              const newService = {\n                name: 'HTTP',\n                port: 80,\n                enabled: true,\n                protocol: 'TCP',\n              };\n              handleConfigChange('services', [...services, newService]);\n            }}\n          >\n            <FiPlus className=\"w-4 h-4 mr-2\" />\n            Add Service\n          </Button>\n        </div>\n\n        <div className=\"space-y-3\">\n          {(config.services || []).map((service: any, index: number) => (\n            <div key={index} className=\"border border-gray-200 rounded-lg p-3\">\n              <div className=\"flex items-center justify-between mb-3\">\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"font-medium text-gray-900\">{service.name}</span>\n                  <button\n                    onClick={() => {\n                      const newServices = [...(config.services || [])];\n                      newServices[index] = { ...service, enabled: !service.enabled };\n                      handleConfigChange('services', newServices);\n                    }}\n                    className={`flex items-center space-x-1 px-2 py-1 rounded text-xs ${\n                      service.enabled\n                        ? 'bg-green-100 text-green-700'\n                        : 'bg-gray-100 text-gray-600'\n                    }`}\n                  >\n                    {service.enabled ? (\n                      <FiToggleRight className=\"w-4 h-4\" />\n                    ) : (\n                      <FiToggleLeft className=\"w-4 h-4\" />\n                    )}\n                    <span>{service.enabled ? 'Running' : 'Stopped'}</span>\n                  </button>\n                </div>\n                \n                <Button\n                  variant=\"danger\"\n                  size=\"sm\"\n                  onClick={() => {\n                    const newServices = (config.services || []).filter((_: any, i: number) => i !== index);\n                    handleConfigChange('services', newServices);\n                  }}\n                >\n                  <FiTrash2 className=\"w-4 h-4\" />\n                </Button>\n              </div>\n\n              <div className=\"grid grid-cols-3 gap-3\">\n                <FormInput\n                  label=\"Service Name\"\n                  value={service.name}\n                  onChange={(e) => {\n                    const newServices = [...(config.services || [])];\n                    newServices[index] = { ...service, name: e.target.value };\n                    handleConfigChange('services', newServices);\n                  }}\n                  placeholder=\"HTTP\"\n                />\n                \n                <FormInput\n                  label=\"Port\"\n                  type=\"number\"\n                  value={service.port}\n                  onChange={(e) => {\n                    const newServices = [...(config.services || [])];\n                    newServices[index] = { ...service, port: parseInt(e.target.value) };\n                    handleConfigChange('services', newServices);\n                  }}\n                  placeholder=\"80\"\n                  min=\"1\"\n                  max=\"65535\"\n                />\n                \n                <FormSelect\n                  label=\"Protocol\"\n                  value={service.protocol}\n                  onChange={(e) => {\n                    const newServices = [...(config.services || [])];\n                    newServices[index] = { ...service, protocol: e.target.value };\n                    handleConfigChange('services', newServices);\n                  }}\n                  options={[\n                    { value: 'TCP', label: 'TCP' },\n                    { value: 'UDP', label: 'UDP' },\n                  ]}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderInterfaces = () => (\n    <div className=\"space-y-6\">\n      <h3 className=\"text-lg font-medium text-gray-900\">Network Interface</h3>\n      \n      {device.interfaces.map((interface_) => (\n        <div key={interface_.id} className=\"border border-gray-200 rounded-lg p-4\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h4 className=\"font-medium text-gray-900\">{interface_.name}</h4>\n            <button\n              onClick={() => {\n                const newInterfaces = device.interfaces.map(iface =>\n                  iface.id === interface_.id\n                    ? { ...iface, status: iface.status === 'up' ? 'down' : 'up' }\n                    : iface\n                );\n                onUpdate(device.id, { interfaces: newInterfaces });\n                onHasChanges(true);\n              }}\n              className={`flex items-center space-x-1 px-2 py-1 rounded text-xs ${\n                interface_.status === 'up'\n                  ? 'bg-green-100 text-green-700'\n                  : 'bg-gray-100 text-gray-600'\n              }`}\n            >\n              {interface_.status === 'up' ? (\n                <FiToggleRight className=\"w-4 h-4\" />\n              ) : (\n                <FiToggleLeft className=\"w-4 h-4\" />\n              )}\n              <span>{interface_.status === 'up' ? 'Up' : 'Down'}</span>\n            </button>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <FormInput\n              label=\"MAC Address\"\n              value={interface_.macAddress || generateMACAddress()}\n              onChange={(e) => {\n                const newInterfaces = device.interfaces.map(iface =>\n                  iface.id === interface_.id\n                    ? { ...iface, macAddress: e.target.value }\n                    : iface\n                );\n                onUpdate(device.id, { interfaces: newInterfaces });\n                onHasChanges(true);\n              }}\n              placeholder=\"00:1A:2B:3C:4D:5E\"\n            />\n\n            <FormSelect\n              label=\"Speed\"\n              value={interface_.speed || '1000'}\n              onChange={(e) => {\n                const newInterfaces = device.interfaces.map(iface =>\n                  iface.id === interface_.id\n                    ? { ...iface, speed: e.target.value }\n                    : iface\n                );\n                onUpdate(device.id, { interfaces: newInterfaces });\n                onHasChanges(true);\n              }}\n              options={[\n                { value: '100', label: '100 Mbps' },\n                { value: '1000', label: '1 Gbps' },\n                { value: '10000', label: '10 Gbps' },\n              ]}\n            />\n          </div>\n\n          <div className=\"mt-4 bg-gray-50 p-3 rounded\">\n            <h5 className=\"font-medium text-gray-900 mb-2\">Performance Metrics</h5>\n            <div className=\"grid grid-cols-2 gap-4 text-sm\">\n              <div>\n                <span className=\"text-gray-600\">CPU Usage:</span>\n                <span className=\"ml-2 font-mono\">{Math.floor(Math.random() * 100)}%</span>\n              </div>\n              <div>\n                <span className=\"text-gray-600\">Memory Usage:</span>\n                <span className=\"ml-2 font-mono\">{Math.floor(Math.random() * 100)}%</span>\n              </div>\n              <div>\n                <span className=\"text-gray-600\">Network I/O:</span>\n                <span className=\"ml-2 font-mono\">{Math.floor(Math.random() * 1000)} KB/s</span>\n              </div>\n              <div>\n                <span className=\"text-gray-600\">Uptime:</span>\n                <span className=\"ml-2 font-mono\">{Math.floor(Math.random() * 365)} days</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  switch (activeTab) {\n    case 'basic':\n      return renderBasicSettings();\n    case 'interfaces':\n      return renderInterfaces();\n    default:\n      return null;\n  }\n};\n\nfunction generateMACAddress(): string {\n  const chars = '0123456789ABCDEF';\n  let mac = '';\n  for (let i = 0; i < 12; i++) {\n    if (i > 0 && i % 2 === 0) mac += ':';\n    mac += chars[Math.floor(Math.random() * chars.length)];\n  }\n  return mac;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5857, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hanym/Desktop/packet-tracer-emulator/frontend/src/components/network/DeviceConfigModal.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Modal } from '@/components/ui/Modal';\nimport { Button } from '@/components/ui/Button';\nimport { useNetworkStore } from '@/store/networkStore';\nimport { NetworkDevice } from '@/types';\nimport { RouterConfig } from './config/RouterConfig';\nimport { SwitchConfig } from './config/SwitchConfig';\nimport { PCConfig } from './config/PCConfig';\nimport { ServerConfig } from './config/ServerConfig';\n\ninterface DeviceConfigModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  deviceId: string | null;\n}\n\nexport const DeviceConfigModal: React.FC<DeviceConfigModalProps> = ({\n  isOpen,\n  onClose,\n  deviceId,\n}) => {\n  const { devices, updateDevice } = useNetworkStore();\n  const [activeTab, setActiveTab] = useState('basic');\n  const [hasChanges, setHasChanges] = useState(false);\n\n  const device = deviceId ? devices.find(d => d.id === deviceId) : null;\n\n  useEffect(() => {\n    if (isOpen) {\n      setActiveTab('basic');\n      setHasChanges(false);\n    }\n  }, [isOpen]);\n\n  if (!device) return null;\n\n  const handleSave = () => {\n    // Configuration will be saved automatically through the config components\n    setHasChanges(false);\n    onClose();\n  };\n\n  const handleClose = () => {\n    if (hasChanges) {\n      if (confirm('You have unsaved changes. Are you sure you want to close?')) {\n        onClose();\n      }\n    } else {\n      onClose();\n    }\n  };\n\n  const tabs = [\n    { id: 'basic', label: 'Basic Settings' },\n    { id: 'interfaces', label: 'Interfaces' },\n    { id: 'routing', label: 'Routing' },\n    { id: 'advanced', label: 'Advanced' },\n  ];\n\n  // Filter tabs based on device type\n  const availableTabs = tabs.filter(tab => {\n    if (device.type === 'pc' || device.type === 'server') {\n      return ['basic', 'interfaces'].includes(tab.id);\n    }\n    return true;\n  });\n\n  const renderConfigComponent = () => {\n    switch (device.type) {\n      case 'router':\n        return (\n          <RouterConfig\n            device={device}\n            activeTab={activeTab}\n            onUpdate={updateDevice}\n            onHasChanges={setHasChanges}\n          />\n        );\n      case 'switch':\n        return (\n          <SwitchConfig\n            device={device}\n            activeTab={activeTab}\n            onUpdate={updateDevice}\n            onHasChanges={setHasChanges}\n          />\n        );\n      case 'pc':\n        return (\n          <PCConfig\n            device={device}\n            activeTab={activeTab}\n            onUpdate={updateDevice}\n            onHasChanges={setHasChanges}\n          />\n        );\n      case 'server':\n        return (\n          <ServerConfig\n            device={device}\n            activeTab={activeTab}\n            onUpdate={updateDevice}\n            onHasChanges={setHasChanges}\n          />\n        );\n      default:\n        return <div>Unsupported device type</div>;\n    }\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      title={`Configure ${device.name}`}\n      size=\"lg\"\n    >\n      <div className=\"flex h-[600px]\">\n        {/* Sidebar with tabs */}\n        <div className=\"w-48 border-r border-gray-200 bg-gray-50\">\n          <div className=\"p-4\">\n            <div className=\"text-sm font-medium text-gray-900 mb-2\">\n              {device.type.toUpperCase()} Configuration\n            </div>\n            <div className=\"text-xs text-gray-500 mb-4\">\n              {device.name}\n            </div>\n            <nav className=\"space-y-1\">\n              {availableTabs.map((tab) => (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`w-full text-left px-3 py-2 text-sm rounded-md transition-colors ${\n                    activeTab === tab.id\n                      ? 'bg-blue-100 text-blue-700 font-medium'\n                      : 'text-gray-600 hover:text-gray-900 hover:bg-gray-100'\n                  }`}\n                >\n                  {tab.label}\n                </button>\n              ))}\n            </nav>\n          </div>\n        </div>\n\n        {/* Main content area */}\n        <div className=\"flex-1 flex flex-col\">\n          <div className=\"flex-1 p-6 overflow-y-auto\">\n            {renderConfigComponent()}\n          </div>\n\n          {/* Footer */}\n          <div className=\"px-6 py-4 border-t border-gray-200 bg-gray-50\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-2\">\n                {hasChanges && (\n                  <div className=\"flex items-center space-x-2 text-sm text-orange-600\">\n                    <div className=\"w-2 h-2 bg-orange-400 rounded-full\"></div>\n                    <span>Unsaved changes</span>\n                  </div>\n                )}\n              </div>\n              <div className=\"flex items-center space-x-3\">\n                <Button variant=\"secondary\" onClick={handleClose}>\n                  Cancel\n                </Button>\n                <Button variant=\"primary\" onClick={handleSave}>\n                  Save Configuration\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6156, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hanym/Desktop/packet-tracer-emulator/frontend/src/app/simulator/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { NetworkTopology } from '@/components/network/NetworkTopology';\nimport { ControlPanel } from '@/components/network/ControlPanel';\nimport { DevicePanel } from '@/components/network/DevicePanel';\nimport { PacketFlow } from '@/components/network/PacketFlow';\nimport { PacketAnimation } from '@/components/network/PacketAnimation';\nimport { DeviceConfigModal } from '@/components/network/DeviceConfigModal';\n\nexport default function SimulatorPage() {\n  const [configModalOpen, setConfigModalOpen] = useState(false);\n  const [selectedDeviceId, setSelectedDeviceId] = useState<string | null>(null);\n\n  const handleOpenDeviceConfig = (deviceId: string) => {\n    setSelectedDeviceId(deviceId);\n    setConfigModalOpen(true);\n  };\n\n  const handleCloseDeviceConfig = () => {\n    setConfigModalOpen(false);\n    setSelectedDeviceId(null);\n  };\n\n  return (\n    <div className=\"h-screen flex flex-col bg-gray-50\">\n      {/* Header */}\n      <header className=\"bg-white shadow-sm border-b border-gray-200 px-6 py-4\">\n        <div className=\"flex items-center justify-between\">\n          <h1 className=\"text-2xl font-bold text-gray-900\">\n            Network Packet Tracer Emulator\n          </h1>\n          <div className=\"flex items-center space-x-4\">\n            <span className=\"text-sm text-gray-500\">\n              Build • Configure • Simulate • Learn\n            </span>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <div className=\"flex-1 flex overflow-hidden\">\n        {/* Left Sidebar - Device Panel */}\n        <div className=\"w-80 bg-white border-r border-gray-200 flex flex-col\">\n          <DevicePanel onOpenDeviceConfig={handleOpenDeviceConfig} />\n        </div>\n\n        {/* Center - Network Topology with Packet Animations */}\n        <div className=\"flex-1 flex flex-col relative\">\n          <NetworkTopology onOpenDeviceConfig={handleOpenDeviceConfig} />\n          <PacketAnimation />\n        </div>\n\n        {/* Right Sidebar - Control Panel */}\n        <div className=\"w-80 bg-white border-l border-gray-200 flex flex-col\">\n          <ControlPanel />\n        </div>\n      </div>\n\n      {/* Bottom Panel - Packet Flow */}\n      <div className=\"h-48 bg-white border-t border-gray-200\">\n        <PacketFlow />\n      </div>\n\n      {/* Device Configuration Modal */}\n      <DeviceConfigModal\n        isOpen={configModalOpen}\n        onClose={handleCloseDeviceConfig}\n        deviceId={selectedDeviceId}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;;;;;;;;AAUe,SAAS;IACtB,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAExE,MAAM,yBAAyB,CAAC;QAC9B,oBAAoB;QACpB,mBAAmB;IACrB;IAEA,MAAM,0BAA0B;QAC9B,mBAAmB;QACnB,oBAAoB;IACtB;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAO,WAAU;0BAChB,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAmC;;;;;;sCAGjD,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAK,WAAU;0CAAwB;;;;;;;;;;;;;;;;;;;;;;0BAQ9C,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,4IAAA,CAAA,cAAW;4BAAC,oBAAoB;;;;;;;;;;;kCAInC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,gJAAA,CAAA,kBAAe;gCAAC,oBAAoB;;;;;;0CACrC,8OAAC,gJAAA,CAAA,kBAAe;;;;;;;;;;;kCAIlB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,6IAAA,CAAA,eAAY;;;;;;;;;;;;;;;;0BAKjB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,2IAAA,CAAA,aAAU;;;;;;;;;;0BAIb,8OAAC,kJAAA,CAAA,oBAAiB;gBAChB,QAAQ;gBACR,SAAS;gBACT,UAAU;;;;;;;;;;;;AAIlB","debugId":null}}]
}